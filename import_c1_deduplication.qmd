---
title: "SENDAs Agreement 1 Update 2010-2022"
description: |
  Load administrative data from SENDAs patient, compare information with previous databases and explore new data.
date: "`r withr::with_locale(new = c('LC_TIME' = 'C'), code =format(Sys.time(),'%B %d, %Y'))`"
author: "Andrés González Santa Cruz"
format: 
  html:
    code-fold: true
editor: visual
---

`r message(paste0("Date: ",withr::with_locale(new = c('LC_TIME' = 'C'), code =Sys.time())))`

```{css}
#| echo: false

script src = "https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"

```

```{js zoom-jquery, echo = FALSE}
$(document).ready(function() {

$('body').prepend('<div class=\"zoomDiv\"><img src=\"\" class=\"zoomImg\"></div>');

// onClick function for all plots (img's)

$('img:not(.zoomImg)').click(function() {
$('.zoomImg').attr('src', $(this).attr('src')).css({width: '100%'});
$('.zoomDiv').css({opacity: '1', width: 'auto', border: '1px solid white', borderRadius: '5px', position: 'fixed', top: '50%', left: '50%', marginRight: '-50%', transform: 'translate(-50%, -50%)', boxShadow: '0px 0px 50px #888888', zIndex: '50', overflow: 'auto', maxHeight: '100%'});
});

// onClick function for zoomImg

$('img.zoomImg').click(function() {
$('.zoomDiv').css({opacity: '0', width: '0%'});
});
});
```

```{css hideOutput-lib-src, echo = FALSE}
<script src="https://github.com/AGSCL/gine_brechas_pandemia/blob/main/hideOutput.js"></script>
```

```{js hideOutput, echo = FALSE}
$(document).ready(function() {

\$chunks = \$('.fold');

\$chunks.each(function () { // add button to source code chunks
if ( \$(this).hasClass('s') ) {
    \$('pre.r', this).prepend("\<div class=\\"showopt\\"\>Show Source\</div\>\<br style=\\"line-height:22px;\\"/\>");
    \$('pre.r', this).children('code').attr('class', 'folded');
    } // add button to output chunks

    if ( \$(this).hasClass('o') ) {
        \$('pre:not(.r)', this).has('code').prepend("\<div class=\\"showopt\\"\>Show Output\</div\>\<br style=\\"line-height:22px;\\"/\>");
        \$('pre:not(.r)', this).children('code:not(r)').addClass('folded'); // add button to plots
        \$(this).find('img').wrap('\<pre class=\\"plot\\"\>\</pre\>');
        \$('pre.plot', this).prepend("\<div class=\\"showopt\\"\>Show Plot\</div\>\<br style=\\"line-height:22px;\\"/\>");
        \$('pre.plot', this).children('img').addClass('folded');
        }
}); // hide all chunks when document is loaded

\$('.folded').css('display', 'none') // function to toggle the visibility
\$('.showopt').click(function() {
        var label = \$(this).html();
        if (label.indexOf("Show") \>= 0) {
            \$(this).html(label.replace("Show", "Hide"));
        } else {
        \$(this).html(label.replace("Hide", "Show"));
        }

\$(this).siblings('code, img').slideToggle('fast', 'swing');
});
});
```

```{=html}
<style type="text/css">

.showopt {

background-color: #004c93; color: #FFFFFF; width: 100px; height: 20px; text-align: center; vertical-align: middle !important; float: right; font-family: sans-serif; border-radius: 8px;

}

.showopt:hover {
background-color: #dfe4f2;
color: #004c93;

}

pre.plot {
background-color: white !important;
}

.tablelines table, .tablelines td, .tablelines th {
border: 1px solid black;
}

.centrado {
text-align: center;
}

.table.center {
margin-left:auto;
margin-right:auto;
}

/* https://vivekjaiskumar.medium.com/css-is-and-not-selector-17c942ec83f :is()*/

/* Applies to outputs that are not code other than R*/

pre {
overflow-x: auto !important;
}

pre code {
word-wrap: normal !important;
white-space: pre !important;
}

/*
pre:not(.sourceCode) {
white-space: nowrap !important;
}
*/
.sourceCode { /* Important gives precedence */
font-size: 10px !important;
line-height: 50% !important;
}
body{ /* Normal */
text-align: justify;
}
.superbigimage{
overflow-y:scroll;
height:350px;
white-space: nowrap;
overflow-x: auto;
width:100%;
}
.superbigimage img{
overflow-y: scroll;
overflow-x: hidden;
}
.message { color:#446C6E; font-family: monospace;font-size: 10px; line-height: 110%; font-weight: bold;}
div.blue { background-color:#e6f0ff; border-radius: 5px; padding: 5px; text-align: justify;}
div.red { background-color:#e6bab1; border-radius: 5px; padding: 5px; text-align: justify;}
.pandoc-table { /* Should add !important; but it seems no necessary */
margin-left:auto; /* To center */
margin-right:auto;
border-collapse: collapse;
table-layout: auto;
font-size: 11px;
overflow-y: auto;
max-height:450px !important;
white-space: nowrap;
overflow-x: auto;
width:450px;
}
.pandoc-table th {/* header */
text-align: center !important;
font-size: 10px;
padding: 0px;
}
.pandoc-table td {
text-align: left !important;
font-size: 9px;
padding: 0px;
}
.pandoc-table caption {
text-align: left !important;
font-size: 11px !important;
}

.center-table {
text-align: left !important;
font-size: 9px;
overflow-y:scroll;
height:450px;
overflow-x: scroll;
}

.controlly{
overflow-y:scroll;
height:350px;
overflow-x: scroll;

}
</style>
```
```{=html}
<!-- We gotta do each function to hide code and outputs per section, by every ID, we gotta create a different function -->

<script>
function myFunction1() {
var x = document.getElementById("myDIV");
if (x.style.display === "none") {
x.style.display = "block";
} else {
x.style.display = "none";
}
}
</script>

<script>
function myFunction2() {
var x = document.getElementById("myDIV2");
if (x.style.display === "none") {
x.style.display = "block";
} else {
x.style.display = "none";
}
}
</script>
```
```{r python-environment}
rm(list = ls()) 
unlink("Trabahjo-1_files", recursive=T)
unlink("Trabahjo 1_files", recursive=T)
#fuentes: 
#https://rpubs.com/georgy_makarov/897844
path<-paste0(getwd(),'/env')

#Sys.setenv(RETICULATE_PYTHON =  "")

#Sys.setenv(RETICULATE_PYTHON =  Sys.which("python"))

#reticulate::py_config()
#use_python(paste0(path,"/Scripts/python.exe"))

#Sys.setenv(LD_LIBRARY_PATH =  paste0(path,"/Lib"))
#Sys.setenv(LD_LIBRARY_PATH_64 =  paste0(path,"/Lib"))
#instalar paquetes de funcionalidades básicas para tener ubicaciones relativas y acceso a python (reticulate)
if(!require(reticulate)){install.packages("reticulate")}
if(!require(rstudioapi)){install.packages("rstudioapi")}


invisible("Create env")
#https://stackoverflow.com/questions/54043607/how-to-set-pyenv-python-for-reticulate
#Directory H:/Mi unidad/PERSONAL ANDRES/UCH_salud_publica/asignaturas/env is not a Python virtualenv
#virtualenv_create(envname  = path, packages = c("pip", "statsmodels", "matplotlib", "numpy", "pandas", "scipy"))
# "C:/Users/andre/anaconda3/python.exe" -m venv "H:/Mi unidad/PERSONAL ANDRES/UCH_salud_publica/asignaturas/9_Computacion_Estadistica/env"

#FUENTES:
#https://rstudio.github.io/reticulate/articles/versions.html
#Virtual environment functions are not supported on Windows (the use of conda environments is recommended on Windows).

invisible("Use environment")
#https://ugoproto.github.io/ugo_r_doc/pdf/reticulate.pdf


# tx  <- readLines(paste0(path,"/pyvenv.cfg"))
# tx[[1]] <- paste0("home = ",gsub('/', '\\', paste0(path,"/Scripts/python.exe"), fixed=T))
# tx[[3]] <- "version = 3.8.0"

#writeLines(tx, con=paste0(path,"/pyvenv.cfg"))

#H:/Mi unidad/PERSONAL ANDRES/UCH_salud_publica/asignaturas/env/Scripts/python.exe"
#use_virtualenv(path)

#usar entorno virtual ya creado
#información sobre entorno virtual
#py_discover_config()
#conda_python(envname =  "r-scrublet")


# FUENTES
#https://akrabat.com/creating-virtual-environments-with-pyenv/
#https://rstudio.github.io/reticulate/reference/install_python.html
#https://github.com/pyenv/pyenv/wiki#suggested-build-environment
#https://github.com/pyenv/pyenv
#https://stackoverflow.com/questions/56755156/reticulate-not-setting-python-path
#https://github.com/rstudio/reticulate/issues/291#issuecomment-437143751
#https://github.com/pyenv/pyenv
#https://github.com/pyenv-win/pyenv-win#installation
#https://stackoverflow.com/questions/52060867/how-to-use-pip-for-pyenv
#https://github.com/pyenv/pyenv/issues/2417
```

```{python, eval=F}
!pyenv install -l | findstr 3.8
!pip install --upgrade pyenv-win
!env PYTHON_CONFIGURE_OPTS="--enable-shared" pyenv install
!env PYTHON_CONFIGURE_OPTS="--enable-shared" pyenv install 3.7.5
!pyenv build
```

<br>

# Data Loading and Exploration

## Loading Packages

Proceed to load the necessary packages.

```{r}
#| message: false
#| include: false
#| warning: false

# limpiar completamente el entorno global environment

#Para importar bases
if(!require(rio)){install.packages("rio")}
#Para manipular bases de datos
if(!require(tidyverse)){install.packages("tidyverse")}
if(!require(tidylog)){install.packages("tidylog")}

#Para tabla 1
if(!require(tableone)){install.packages("tableone")}
if(!require(compareGroups)){install.packages("compareGroups")}
if(!require(Hmisc)){install.packages("Hmisc")}
if(!require(kableExtra)){install.packages("kableExtra")}
if(!require(DT)){install.packages("DT")}
#Para explorar relaciones bivariadas
if(!require(polycor)){install.packages("polycor")}
if(!require(corrplot)){install.packages("corrplot")}
#Para modelos de regresión
if(!require(jtools)){install.packages("jtools")}
#Para cargar paquetes
if(!require(pacman)){install.packages("pacman")}
#Para imputar, cargo los paqeutes con la función p_load, y en caso que no encuentre dicho paquete, instalo
pacman::p_load(missRanger, missForest, install=T)
#Para analizar supervivencia
pacman::p_load(survminer, survcomp, survRM2, flexsurv, mstate, rms, install=T)
#Para diseño de encuestas complejas o ponderación
if(!require(survey)){install.packages("survey")}
#para manipular tiempo
if(!require(lubridate)){install.packages("lubridate")}


#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
######0.C. functions------------------

read_excel_mult <- function(dir, filename) {
  assign(paste0(substr(filename, 1, 7)),read.delim(paste0(dir, filename),
        na.strings="null", header = T, fileEncoding="UTF-8"),envir = .GlobalEnv)
  }

#function to copy names
copiar_nombres <- function(x,row.names=FALSE,col.names=TRUE,...) {
  write.table(format(x),"clipboard",sep="\t",row.names=FALSE,col.names=col.names,...)
  return(x)}

#function to save datasets in excel files (x=object to change; y=name of the excel file)
guardar_tablas <- function (x,y) {writexl::write_xlsx(as.data.frame(x, keeprownames= T),paste0(y,".xlsx"))}


#define a table
as.data.frame.TableOne <- function(x, ...) {capture.output(print(x,
                          showAllLevels = TRUE, ...) -> x)
  y <- as.data.frame(x)
  y$characteristic <- dplyr::na_if(rownames(x), "")
  y <- y %>%
  fill(characteristic, .direction = "down") %>%
  select(characteristic, everything())
  rownames(y) <- NULL
  y}


#to format rows in bold
format_cells <- function(df, rows ,cols, value = c("italics", "bold", "strikethrough")){

  # select the correct markup
  # one * for italics, two ** for bold
  map <- setNames(c("*", "**", "~~"), c("italics", "bold", "strikethrough"))
  markup <- map[value]  

  for (r in rows){
    for(c in cols){

      # Make sure values are not factors
      df[[c]] <- as.character( df[[c]])

      # Update formatting
      df[r, c] <- ifelse(nchar(df[r, c])==0,"",paste0(markup, gsub(" ", "", df[r, c]), markup))
    }
  }

  return(df)
}

```

Load the data

```{r import, message=F, error=T, eval=T, echo=T}
path<-dirname(rstudioapi::getActiveDocumentContext()$path)
path<-paste0(getwd())
dir_c1<-paste0(gsub("22","19",path),"/Encriptado c1/Personas tratadas C1/")

#matches a string that starts with the number 2, followed by any number of characters, followed by a space, followed by the word "txt".
SISTRAT23_c1<-list.files(path=toString(dir_c1), pattern="202353")

#Import datasets from May 3, 2022
for (i in 1:length(SISTRAT23_c1)) {
  x<-SISTRAT23_c1[i]
  readr::read_delim(paste0(dir_c1, x),
                    na = c("", "NA","null"),
                    guess_max = min(1e5, Inf)) %>% 
    janitor::clean_names() %>% 
    as.data.frame() %>% 
    dplyr::rename("HASH_KEY"="rut") %>% 
    dplyr::select(HASH_KEY, everything()) %>% 
    assign(paste0("SISTRAT23_c1_",stringr::str_sub(x, 1, 4)),.,envir = .GlobalEnv)
}

#Estimate previous databases (November 13, 2019)
SISTRAT23_c1_pre_oct19<-list.files(path=toString(dir_c1), pattern="20191113")

#Import datasets
for (i in 1:length(SISTRAT23_c1_pre_oct19)) {
  x<-SISTRAT23_c1_pre_oct19[i]
  #2019 have a special treatment because it has another registry
  if(grepl("EneOct",x)){
  readr::read_delim(paste0(dir_c1, x),
                    na = c("", "NA","null"),
                    guess_max = min(1e5, Inf),
                    skip=0) %>% 
    janitor::clean_names() %>% 
    as.data.frame() %>% 
    dplyr::rename("HASH_KEY" = !!names(.[92]))%>%
    dplyr::mutate(TABLE= rep(x,)) %>% 
    dplyr::select(TABLE, HASH_KEY, everything()) %>%       
    assign(paste0("SISTRAT23_c1_pre_",stringr::str_sub(x, 1, 4)),.,envir = .GlobalEnv)
  } else {
  readr::read_delim(paste0(dir_c1, x),
                    na = c("", "NA","null"),
                    guess_max = min(1e5, Inf),
                    skip=0) %>% 
    janitor::clean_names() %>% 
    as.data.frame() %>% 
    dplyr::rename("HASH_KEY" = !!names(.[91]))%>%
    dplyr::mutate(TABLE= rep(x,)) %>% 
    dplyr::select(TABLE, HASH_KEY, everything()) %>%       
    assign(paste0("SISTRAT23_c1_pre_",stringr::str_sub(x, 1, 4)),.,envir = .GlobalEnv)    
  }
}
#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#MERGE DATABASES
CONS_C1_2019_22=data.table::rbindlist(mget(paste0("SISTRAT23_c1_",c(2019:2022))), idcol="TABLE", fill=T) %>% 
 dplyr::mutate(TABLE = sub(".+(....)$", "\\1", TABLE))

CONS_C1_2010_19=plyr::rbind.fill(mget(paste0("SISTRAT23_c1_pre_",c(2010:2019)))) %>% 
  data.table::data.table() %>% 
 dplyr::mutate(TABLE = sub(".+(....)$", "\\1", TABLE))
# data.table::rbindlist(mget(paste0("SISTRAT23_c1_pre_",c(2010:2019))), idcol="TABLE", fill=T)%>% 
#  dplyr::mutate(TABLE = sub(".+(....)$", "\\1", TABLE))
```

We can see the following:

- There are variables that I did not use at any time, such as the reason for administrative discharge (`motivo_de_egreso_alta_administrativa`), which includes a reason such as "death", the consorcio that groups it.
- There are other variables incorporated in these databases, such as `servicios_basicos`, `laboral_ingresos`, `perso_dormitorio_vivienda`,`precariedad_vivienda` and `servicios_basicos_99`.

<br>

## Data transformation and normalization

In the previous SENDA databases, the censoring time was set at the date of database withdrawal (November 13, 2019)., with their last treatment discharge on `r max(readr::parse_date(CONS_C1_2010_19$fecha_egreso_de_tratamiento,"%d/%m/%Y"),na.rm=T)`. For the databases from 2019 to 2023, however, the date of discharge of the last database was `r max(readr::parse_date(CONS_C1_2019_22$fecha_egreso_de_tratamiento,"%d/%m/%Y"),na.rm=T)`. The total amount of records in databases from 2010-2022 were `r format(length(c(CONS_C1_2019_22$HASH_KEY,CONS_C1_2010_19$HASH_KEY)), big.mark=",")` of `r format(length(unique(c(CONS_C1_2019_22$HASH_KEY,CONS_C1_2010_19$HASH_KEY))), big.mark=",")` patients (distinct HASHs, or encrypted National ID). `r scales::percent(length(setdiff(unique(CONS_C1_2019_22$HASH_KEY),unique(CONS_C1_2010_19$HASH_KEY)))/length(unique(CONS_C1_2019_22$HASH_KEY)),accuracy=.1)` (n= `r format(length(setdiff(unique(CONS_C1_2019_22$HASH_KEY),unique(CONS_C1_2010_19$HASH_KEY))), big.mark=",")`) were new to the SENDA Agreement 1.

The files from the prosecutor's office are being incorporated for comparison purposes from `Base_fiscalia_v2`.

```{r traer-base, message=F, error=T, eval=T, echo=T}
Base_fiscalia_v2 <- readxl::read_excel(paste0(sub("2022 \\(github\\)","2019 \\(github\\)",path),"/Base_v3_dic_2021.xlsx"), 
sheet = "Base", skip = 4, guess_max = min(1000000, Inf))%>% janitor::clean_names() %>% 
  dplyr::mutate(gls_region=dplyr::case_when(gls_region=="REGION METROPOLITANA CENTRO NORTE"~ "RM Centro Norte",
                                            gls_region=="REGION METROPOLITANA OCCIDENTE"~ "RM Occidente",
                                            gls_region=="REGION METROPOLITANA ORIENTE"~ "RM Oriente",
                                            gls_region=="REGION METROPOLITANA SUR"~ "RM Sur",
                                            T~gls_region)) %>% 
  dplyr::mutate(region_delito=dplyr::case_when(region_delito=="REGION METROPOLITANA CENTRO NORTE"~ "RM Centro Norte",
                                            region_delito=="REGION METROPOLITANA OCCIDENTE"~ "RM Occidente",
                                            region_delito=="REGION METROPOLITANA ORIENTE"~ "RM Oriente",
                                            region_delito=="REGION METROPOLITANA SUR"~ "RM Sur",
                                            T~region_delito)) %>% 
  dplyr::mutate(fec_comision_simple=as.Date(stringr::str_extract(as.character(fec_comision), "^.{10}")))%>% 
  dplyr::mutate(fec_cbiorelacion_simple=as.Date(stringr::str_extract(as.character(fec_cbiorelacion), "^.{10}")))%>%
  dplyr::mutate(fec_nacimiento_simple=as.Date(stringr::str_extract(as.character(fec_nacimiento), "^.{10}")))%>%
  dplyr::mutate(termino_relacion_simple=as.Date(stringr::str_extract(as.character(termino_relacion), "^.{10}")))%>% 
  dplyr::rename("marca_suspension_43"="marca_suspension_46","marca_pena_44"="marca_pena_47","marca_multa_45"="marca_multa_48","medida_alternativa_46"="medida_alternativa_49","clasificacion_pena_47"="clasificacion_pena_50","tramos_condena_48"="tramos_condena","clasificacion_penarpa_1_49"="clasificacion_penarpa_1_52","clasificacion_penarpa_2_50"="clasificacion_penarpa_2_53","marca_suspension_51"="marca_suspension_54","marca_pena_52"="marca_pena_55","marca_multa_53"="marca_multa_56","medida_alternativa_54"="medida_alternativa_57","clasificacion_pena_55"="clasificacion_pena_58","tramos_condena_56"="tramos_condena_2","clasificacion_penarpa_1_57"="clasificacion_penarpa_1_60","clasificacion_penarpa_2_58"="clasificacion_penarpa_2_61")%>% 
    dplyr::mutate(edad_comision=(unclass(fec_comision_simple)-unclass(fec_nacimiento_simple))/365.25,
                  edad_ter_rel=(unclass(termino_relacion_simple)-unclass(fec_nacimiento_simple))/365.25)
```

Next, a table is presented with the new data.

::: center-table
```{r desc, echo=T, fig.align='center', message=T, error=T, eval=T}
#| message: false
#| warning: false

tables <- list()
for(i in seq_along(names(CONS_C1_2019_22))) {
    tables[[i]] <- dim(table(CONS_C1_2019_22[[i]]))
    attr(tables[[i]], "var_name") <- names(CONS_C1_2019_22)[i]
}

tbone_desc<-
CreateTableOne(vars=setdiff(names(CONS_C1_2019_22), c("HASH_KEY","codigo_identificacion","nombre_centro","comuna_residencia","consorcio","id_centro", "fecha_ingreso_a_tratamiento", "fecha_ingreso_a_convenio_senda", "fecha_egreso_de_tratamiento")), data=  CONS_C1_2019_22, factorVars = setdiff(names(CONS_C1_2019_22),CONS_C1_2010_19 %>% select_if(is.numeric) %>% names()), smd=T, strata="TABLE", addOverall = T, includeNA=T, test=T)

as.data.frame.TableOne(tbone_desc, smd=T, nonnormal= T)%>% 
  dplyr::mutate(char2=characteristic) %>% 
  tidyr::fill(char2) %>% 
  dplyr::select(char2,everything()) %>% 
  dplyr::mutate(level=ifelse(is.na(level),"[Missing]",level)) %>% 
  dplyr::mutate(char2=dplyr::case_when(characteristic=="NA"~NA_character_,T~as.character(characteristic))) %>% 
  format_cells(1, 1:length(names(.)), "bold") %>%
  dplyr::select(-1) %>% 
  knitr::kable(size=10, format="markdown",caption= "Summary descriptives, no PSU(0), PSU (1), by Baseline Treatment Status", escape=T)
#kable(size=10, format="html",caption= "Summary descriptives, by Baseline Treatment Status") %>%     kableExtra::kable_classic()
```
:::


# Session info

```{r session-info, echo=T, error=T, message=TRUE, paged.print=TRUE}
message(paste0("R library: ", Sys.getenv("R_LIBS_USER")))
message(paste0("Date: ",withr::with_locale(new = c('LC_TIME' = 'C'), code =Sys.time())))
message(paste0("Editor context: ", path))

sesion_info <- devtools::session_info()
dplyr::select(
  tibble::as_tibble(sesion_info$packages),
  c(package, loadedversion, source)
) %>% 
  DT::datatable(filter = 'top', colnames = c('Row number' =1,'Paquete' = 2, 'Versión'= 3),
              caption = htmltools::tags$caption(
        style = 'caption-side: top; text-align: left;',
        '', htmltools::em('R packages')),
      options=list(
initComplete = htmlwidgets::JS(
        "function(settings, json) {",
        "$(this.api().tables().body()).css({
            'font-family': 'Helvetica Neue',
            'font-size': '50%', 
            'code-inline-font-size': '15%', 
            'white-space': 'nowrap',
            'line-height': '0.75em',
            'min-height': '0.5em'
            });",#;
        "}")))


 py_list_packages()%>% 
  DT::datatable(filter = 'top', colnames = c('Row number' =1,'Paquete' = 2, 'Versión'= 3),
              caption = htmltools::tags$caption(
        style = 'caption-side: top; text-align: left;',
        '', htmltools::em('Python packages')),
      options=list(
initComplete = htmlwidgets::JS(
        "function(settings, json) {",
        "$(this.api().tables().body()).css({
            'font-family': 'Helvetica Neue',
            'font-size': '50%', 
            'code-inline-font-size': '15%', 
            'white-space': 'nowrap',
            'line-height': '0.75em',
            'min-height': '0.5em'
            });",#;
        "}")))
```

Save

```{r}
 save.image("1_2023.RData")
```
