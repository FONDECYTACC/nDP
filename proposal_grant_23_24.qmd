---
title: "Data explore & construction"
description: |
  Explore and construct data, descriptives, several tests of patterns of polysubstance use, and imputation of missing variables
date: "`r format(Sys.time(),'%B %d, %Y')`"
author: "Andrés González Santa Cruz"
format: 
  html:
    code-fold: true
editor: visual
---

```{css}
#| echo: false

script src = "https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"

```

```{js zoom-jquery, echo = FALSE}
$(document).ready(function() {

$('body').prepend('<div class=\"zoomDiv\"><img src=\"\" class=\"zoomImg\"></div>');

// onClick function for all plots (img's)

$('img:not(.zoomImg)').click(function() {
$('.zoomImg').attr('src', $(this).attr('src')).css({width: '100%'});
$('.zoomDiv').css({opacity: '1', width: 'auto', border: '1px solid white', borderRadius: '5px', position: 'fixed', top: '50%', left: '50%', marginRight: '-50%', transform: 'translate(-50%, -50%)', boxShadow: '0px 0px 50px #888888', zIndex: '50', overflow: 'auto', maxHeight: '100%'});
});

// onClick function for zoomImg

$('img.zoomImg').click(function() {
$('.zoomDiv').css({opacity: '0', width: '0%'});
});
});
```

```{css hideOutput-lib-src, echo = FALSE}
<script src="https://github.com/AGSCL/gine_brechas_pandemia/blob/main/hideOutput.js"></script>
```

```{js hideOutput, echo = FALSE}
$(document).ready(function() {

\$chunks = \$('.fold');

\$chunks.each(function () { // add button to source code chunks
if ( \$(this).hasClass('s') ) {
    \$('pre.r', this).prepend("\<div class=\\"showopt\\"\>Show Source\</div\>\<br style=\\"line-height:22px;\\"/\>");
    \$('pre.r', this).children('code').attr('class', 'folded');
    } // add button to output chunks

    if ( \$(this).hasClass('o') ) {
        \$('pre:not(.r)', this).has('code').prepend("\<div class=\\"showopt\\"\>Show Output\</div\>\<br style=\\"line-height:22px;\\"/\>");
        \$('pre:not(.r)', this).children('code:not(r)').addClass('folded'); // add button to plots
        \$(this).find('img').wrap('\<pre class=\\"plot\\"\>\</pre\>');
        \$('pre.plot', this).prepend("\<div class=\\"showopt\\"\>Show Plot\</div\>\<br style=\\"line-height:22px;\\"/\>");
        \$('pre.plot', this).children('img').addClass('folded');
        }
}); // hide all chunks when document is loaded

\$('.folded').css('display', 'none') // function to toggle the visibility
\$('.showopt').click(function() {
        var label = \$(this).html();
        if (label.indexOf("Show") \>= 0) {
            \$(this).html(label.replace("Show", "Hide"));
        } else {
        \$(this).html(label.replace("Hide", "Show"));
        }

\$(this).siblings('code, img').slideToggle('fast', 'swing');
});
});
```

```{=html}
<style type="text/css">

.showopt {

background-color: #004c93; color: #FFFFFF; width: 100px; height: 20px; text-align: center; vertical-align: middle !important; float: right; font-family: sans-serif; border-radius: 8px;

}

.showopt:hover {
background-color: #dfe4f2;
color: #004c93;

}

pre.plot {
background-color: white !important;
}

.tablelines table, .tablelines td, .tablelines th {
border: 1px solid black;
}

.centrado {
text-align: center;
}

.table.center {
margin-left:auto;
margin-right:auto;
}

/* https://vivekjaiskumar.medium.com/css-is-and-not-selector-17c942ec83f :is()*/

/* Applies to outputs that are not code other than R*/

pre {
overflow-x: auto !important;
}

pre code {
word-wrap: normal !important;
white-space: pre !important;
}

/*
pre:not(.sourceCode) {
white-space: nowrap !important;
}
*/
.sourceCode { /* Important gives precedence */
font-size: 10px !important;
line-height: 50% !important;
}
body{ /* Normal */
text-align: justify;
}
.superbigimage{
overflow-y:scroll;
height:350px;
white-space: nowrap;
overflow-x: auto;
width:100%;
}
.superbigimage img{
overflow-y: scroll;
overflow-x: hidden;
}
.message { color:#446C6E; font-family: monospace;font-size: 10px; line-height: 110%; font-weight: bold;}
div.blue { background-color:#e6f0ff; border-radius: 5px; padding: 5px; text-align: justify;}
div.red { background-color:#e6bab1; border-radius: 5px; padding: 5px; text-align: justify;}
.pandoc-table { /* Should add !important; but it seems no necessary */
margin-left:auto; /* To center */
margin-right:auto;
border-collapse: collapse;
table-layout: auto;
font-size: 11px;
overflow-y: auto;
max-height:450px !important;
white-space: nowrap;
overflow-x: auto;
width:450px;
}
.pandoc-table th {/* header */
text-align: center !important;
font-size: 10px;
padding: 0px;
}
.pandoc-table td {
text-align: left !important;
font-size: 9px;
padding: 0px;
}
.pandoc-table caption {
text-align: left !important;
font-size: 11px !important;
}

.center-table {
text-align: left !important;
font-size: 9px;
padding: 0px;
overflow-y:scroll;
height:400px;
overflow-x: scroll;
}

.controlly{
overflow-y:scroll;
height:350px;
overflow-x: scroll;

}
</style>
```
```{=html}
<!-- We gotta do each function to hide code and outputs per section, by every ID, we gotta create a different function -->

<script>
function myFunction1() {
var x = document.getElementById("myDIV");
if (x.style.display === "none") {
x.style.display = "block";
} else {
x.style.display = "none";
}
}
</script>

<script>
function myFunction2() {
var x = document.getElementById("myDIV2");
if (x.style.display === "none") {
x.style.display = "block";
} else {
x.style.display = "none";
}
}
</script>
```
```{r entorno-python}
rm(list = ls()) 
unlink("proposal_grant_23_24_files", recursive=T)
#fuentes: 
#https://rpubs.com/georgy_makarov/897844
path<-paste0(getwd(),'/env')

#Sys.setenv(RETICULATE_PYTHON =  "")

#Sys.setenv(RETICULATE_PYTHON =  Sys.which("python"))

#reticulate::py_config()
#use_python(paste0(path,"/Scripts/python.exe"))

#Sys.setenv(LD_LIBRARY_PATH =  paste0(path,"/Lib"))
#Sys.setenv(LD_LIBRARY_PATH_64 =  paste0(path,"/Lib"))
#instalar paquetes de funcionalidades básicas para tener ubicaciones relativas y acceso a python (reticulate)
if(!require(reticulate)){install.packages("reticulate")}
if(!require(rstudioapi)){install.packages("rstudioapi")}


invisible("Create env")
#https://stackoverflow.com/questions/54043607/how-to-set-pyenv-python-for-reticulate
#Directory H:/Mi unidad/PERSONAL ANDRES/UCH_salud_publica/asignaturas/env is not a Python virtualenv
#virtualenv_create(envname  = path, packages = c("pip", "statsmodels", "matplotlib", "numpy", "pandas", "scipy"))
# "C:/Users/andre/anaconda3/python.exe" -m venv "H:/Mi unidad/PERSONAL ANDRES/UCH_salud_publica/asignaturas/9_Computacion_Estadistica/env"

#FUENTES:
#https://rstudio.github.io/reticulate/articles/versions.html
#Virtual environment functions are not supported on Windows (the use of conda environments is recommended on Windows).

invisible("Use environment")
#https://ugoproto.github.io/ugo_r_doc/pdf/reticulate.pdf


# tx  <- readLines(paste0(path,"/pyvenv.cfg"))
# tx[[1]] <- paste0("home = ",gsub('/', '\\', paste0(path,"/Scripts/python.exe"), fixed=T))
# tx[[3]] <- "version = 3.8.0"

#writeLines(tx, con=paste0(path,"/pyvenv.cfg"))

#H:/Mi unidad/PERSONAL ANDRES/UCH_salud_publica/asignaturas/env/Scripts/python.exe"
#use_virtualenv(path)

#usar entorno virtual ya creado
#información sobre entorno virtual
#py_discover_config()
#conda_python(envname =  "r-scrublet")


# FUENTES
#https://akrabat.com/creating-virtual-environments-with-pyenv/
#https://rstudio.github.io/reticulate/reference/install_python.html
#https://github.com/pyenv/pyenv/wiki#suggested-build-environment
#https://github.com/pyenv/pyenv
#https://stackoverflow.com/questions/56755156/reticulate-not-setting-python-path
#https://github.com/rstudio/reticulate/issues/291#issuecomment-437143751
#https://github.com/pyenv/pyenv
#https://github.com/pyenv-win/pyenv-win#installation
#https://stackoverflow.com/questions/52060867/how-to-use-pip-for-pyenv
#https://github.com/pyenv/pyenv/issues/2417
```

```{python, eval=F}
!pyenv install -l | findstr 3.8
!pip install --upgrade pyenv-win
!env PYTHON_CONFIGURE_OPTS="--enable-shared" pyenv install
!env PYTHON_CONFIGURE_OPTS="--enable-shared" pyenv install 3.7.5
!pyenv build
```

```{r, "load-data", eval=T}
#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_

# `r format(Sys.time(),'%B %d, %Y')`

# Data import

#Load the data from Mariel Fiscalia Merge 4, created on 2023-05-26
#load("14.Rdata", data_mariel_fisc_merge4 <- new.env() )
load("data_acc_ser_23.RData")

# List all of the objects names in RData:
#ls(.GlobalEnv)
#ls(new_environment)
#rm(new_environment)

#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
```

<br>

## Packages

```{r}
#| message: false
#| include: false
#| warning: false

# limpiar completamente el entorno global environment

#Para importar bases
if(!require(rio)){install.packages("rio")}
#Para manipular bases de datos
if(!require(tidyverse)){install.packages("tidyverse")}
if(!require(tidylog)){install.packages("tidylog")}
if(!require(sqldf)){install.packages("sqldf")}

#Para tabla 1
if(!require(tableone)){install.packages("tableone")}
if(!require(compareGroups)){install.packages("compareGroups")}
if(!require(Hmisc)){install.packages("Hmisc")}
if(!require(kableExtra)){install.packages("kableExtra")}
if(!require(DT)){install.packages("DT")}
#Para explorar relaciones bivariadas
if(!require(polycor)){install.packages("polycor")}
if(!require(corrplot)){install.packages("corrplot")}
#Para modelos de regresión
if(!require(jtools)){install.packages("jtools")}
#Para cargar paquetes
if(!require(pacman)){install.packages("pacman")}
#Para imputar, cargo los paqeutes con la función p_load, y en caso que no encuentre dicho paquete, instalo
pacman::p_load(missRanger, missForest, install=T)
#Para analizar supervivencia
pacman::p_load(survminer, survcomp, survRM2, flexsurv, mstate, rms, install=T)
#Para diseño de encuestas complejas o ponderación
if(!require(survey)){install.packages("survey")}
#para manipular tiempo
if(!require(lubridate)){install.packages("lubridate")}
#MCA
if(!require(FactoMineR)){install.packages("FactoMineR")}
if(!require(factoextra)){install.packages("factoextra")}
#glca
if(!require(glca)){install.packages("glca")}

######0.C. functions------------------

read_excel_mult <- function(dir, filename) {
  assign(paste0(substr(filename, 1, 7)),read.delim(paste0(dir, filename),
        na.strings="null", header = T, fileEncoding="UTF-8"),envir = .GlobalEnv)
  }

#function to copy names
copiar_nombres <- function(x,row.names=FALSE,col.names=TRUE,...) {
  write.table(format(x),"clipboard",sep="\t",row.names=FALSE,col.names=col.names,...)
  return(x)}

#function to save datasets in excel files (x=object to change; y=name of the excel file)
guardar_tablas <- function (x,y) {writexl::write_xlsx(as.data.frame(x, keeprownames= T),paste0(y,".xlsx"))}

#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#to format rows in bold
format_cells <- function(df, rows ,cols, value = c("italics", "bold", "strikethrough")){

  # select the correct markup
  # one * for italics, two ** for bold
  map <- setNames(c("*", "**", "~~"), c("italics", "bold", "strikethrough"))
  markup <- map[value]  

  for (r in rows){
    for(c in cols){

      # Make sure values are not factors
      df[[c]] <- as.character( df[[c]])

      # Update formatting
      df[r, c] <- ifelse(nchar(df[r, c])==0,"",paste0(markup, gsub(" ", "", df[r, c]), markup))
    }
  }

  return(df)
}
#To produce line breaks in messages and warnings
knitr::knit_hooks$set(
   error = function(x, options) {
     paste('\n\n<div class="alert alert-danger">',
           gsub('##', '\n', gsub('^##\ Error', '**Error**', x)),
           '</div>', sep = '\n')
   },
   warning = function(x, options) {
     paste('\n\n<div class="alert alert-warning">',
           gsub('##', '\n', gsub('^##\ Warning:', '**Warning**', x)),
           '</div>', sep = '\n')
   },
   message = function(x, options) {
     paste('<div class="message">',
           gsub('##', '\n', x),
           '</div>', sep = '\n')
   }
)
```

<br>

# Explore and construct database

We checked and resolved the inconsistencies in male users receiving women-only treatments after imputation. We selected the variables of interest, compared the date births and ages at several events and corrected these values.

<br>

Once the standardization and correction of values and labels was complete, we **joined** the databases `CONS_C1_df_dup_SEP_2020_22_d` and `Base_fiscalia_v9` into a single one. The master database was SENDAs treatments, and we only used records of POs database which had an age of offending equal or posterior to the age of admission to treatment. If there were no records of PO, the age of offense were replaced with the age at censorship (2019-11-13). However, we excluded Referrals, Deaths and Censored cases because of missing data.

<br>


::: controlly
```{r join1-fiscalia-merge4, echo=T, fig.align='center', message=T, error=T, eval=T}
# #_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
# invisible("La edad está bien definida en términos relativos (entre ingresos), pero no absolutos (manualmente no llego a la misma edad calculando manualmente ), tiene una diferencia de 0,5 años")

# Age at admission for each treatment: if the date of birth (PO) is not empty and the date of birth of senda is different of date of birth, for each age at admission (for different admissions), we compute the difference of the date of admission (at each admission) with the date of birth (PO) and divided by years; if the date of birth (PO) is not empty but SENDA is empty, we compute the difference of the date of admission (at each admission) with the date of birth (PO) and divided by years; else will be taken from the date at admission from the date of birth of SENDA.
#The same for age at discharge
# #_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#WHERE rn_id = 1
invisible("This chunk is modified from Fiscalia_merge4")

# #_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#joined with edad_al_ing instead of edad_al_egres
Base_fiscalia_v10_grant_23_24<-
sqldf::sqldf("SELECT *
  FROM CONS_C1_df_dup_SEP_2020_22_d AS x  
  LEFT JOIN (SELECT *
             FROM Base_fiscalia_v9
             ) AS y
  ON x.hash_key == y.id AND 
  x.edad_al_ing_1 <= y.age_offending_imp AND x.dup = 1") #2022-11-25  added dup
#183307

paste0("Observations of SENDA database: ",nrow(CONS_C1_df_dup_SEP_2020_22_d))#109756)
paste0("Observations of PO database: ", nrow(Base_fiscalia_v10_grant_23_24))#204,115 nrow

# #_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#clean names, select the first event (whatever the crime committed, we selected the first)
Base_fiscalia_v11_grant_23_24<-
Base_fiscalia_v10_grant_23_24 %>% 
  #discrepancies in names of variables
  janitor::clean_names() %>%   #janitor::tabyl(!is.na(dob_imp_num))
  #previously recoded, 
  dplyr::select(-sex_2, -dateofbirth_imp, -country, -victim, -id_victim, -crime_code_c , -reg_c, -end_type_2c, -cod_comunadelito, -cod_lugarocurrencia, -sex_imp, -region_delito, -filter, -id)%>%
  plyr::rename(c("dateofbirth_imp_2"="dateofbirth_imp")) %>% 
  dplyr::ungroup() %>% 
  #_#_#_#_#_#_#_#_
  #generates errors with survival setting
  #make censorship date of age of comission
  purrr::when(dplyr::filter(., is.na(fech_nac_rec)) %>% nrow() >7 ~ stop("Missing values in the age"), ~.) %>% 
  dplyr::mutate(age_offending_imp= dplyr::case_when(is.na(age_offending_imp)~
lubridate::time_length(lubridate::interval(fech_nac_rec, as.Date("2019-11-13")),unit="years"), T~ age_offending_imp)) %>% 
  dplyr::group_by(hash_key) %>% 
  #KEY STEP: select the first and with ties (more than  one) --> 2023-04-14, was discussed, but did not had consequences (See https://docs.google.com/document/d/1UvtQFM3ToazUyA6G9C7pBYMgk98n31zQSY2-M9d1nEo/edit#)
  dplyr::slice_min(age_offending_imp, n = 1, with_ties = F) %>% 
  dplyr::ungroup() %>% 
  purrr::when(nrow(dplyr::filter(.,age_offending_imp-edad_al_ing_1<0))>0 ~ stop("Cases with negative time after admission to commission of crime"), ~.) %>% 
   dplyr::mutate(motivodeegreso_mod_imp_rec= dplyr::case_when(grepl("Therapeutic",motivodeegreso_mod_imp)~ "Treatment completion", grepl("Early|Late|Administrative", motivodeegreso_mod_imp) & (fech_egres_num_1-fech_ing_num_1 <90) ~  "Treatment non-completion", grepl("Early|Late|Administrative", motivodeegreso_mod_imp) & (fech_egres_num_1-fech_ing_num_1 >=90) ~ "Treatment non-completion", grepl("Referral|Death|Ongoing", motivodeegreso_mod_imp)~ "Censored", T~NA_character_))

warning(paste0("There are ",nrow(dplyr::group_by(Base_fiscalia_v11_grant_23_24, hash_key) %>% dplyr::mutate(rn_hash=row_number()) %>% dplyr::filter(rn_hash>1))," records with more than one offense commited at the youngest age (p= ",dplyr::group_by(Base_fiscalia_v11_grant_23_24, hash_key) %>% dplyr::mutate(rn_hash=row_number()) %>% dplyr::filter(rn_hash>1) %>% dplyr::distinct(hash_key) %>% nrow(),")"))

warning(paste0("There are ",nrow(dplyr::filter(Base_fiscalia_v11_grant_23_24,is.na(fech_nac_rec)))," missing records in date of birth (were ",nrow(dplyr::filter(janitor::clean_names(Base_fiscalia_v10_grant_23_24),is.na(fech_nac_rec)))," in step v10)"))

warning(paste0("There are ", scales::percent(as.numeric(table(is.na(Base_fiscalia_v11_grant_23_24$crime_code_group_rec))[[2]])/nrow(Base_fiscalia_v11_grant_23_24)), " records with events of contacts with justice"))

# #_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
warning("2023-07-17, omitted in this step (filtering for censored, ongoing treatments, etc.),because we are measuring from admission. Restricting the database for that happened later would be a selection bias. Instead, I replaced the value 'Referral and Ongoing with 'Non-completion' status'")
  # 2022-11-01, filter
# Base_fiscalia_v11_grant_23_24<-
#   dplyr::filter(Base_fiscalia_v11_grant_23_24, !grepl("Referral|Death|Censored|Ongoing",motivodeegreso_mod_imp))

Base_fiscalia_v11_grant_23_24$motivodeegreso_mod_imp_rec[grepl("Censored",Base_fiscalia_v11_grant_23_24$motivodeegreso_mod_imp_rec)]<- "Treatment non-completion"

# #_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
# #_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#2023-07_17, 
if(Base_fiscalia_v11_grant_23_24 %>% 
    group_by(hash_key) %>% 
    count() %>% 
    dplyr::filter(n>1) %>% nrow()){warning("Patients with more than one record")}
#2023-07_17, case that have more than one row
# Base_fiscalia_v11_grant_23_24 %>% dplyr::filter(hash_key=="001b0ff241cd0d95828b86b4bdab8c19") %>%   dplyr::select(hash_key, fech_nac, fech_nac_rec, motivodeegreso_mod_imp_rec, age_tr_comp_imp, edad_al_ing_1, edad_al_egres_1, edad_comision, fec_comision_simple, caseid, crime_code_group_rec_prof, end_type_2, gls_proctermino, s_sentence_1, s_restorative_3, s_kindprison_1) %>% View()
# #_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
# #_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
invisible("Ver por qué los valores negativos-R: por que entre la admisión y terminar el tratamiento hay casos que registraron un delito")

Base_fiscalia_v11_grant_23_24 %>% 
  dplyr::select(hash_key, fech_nac, fech_nac_rec, motivodeegreso_mod_imp_rec, age_offending_imp, edad_al_ing_1, edad_al_egres_1, edad_comision, fec_comision_simple, caseid, crime_code_group_rec_prof, end_type_2, gls_proctermino, s_sentence_1, s_restorative_3, s_kindprison_1) %>% 
dplyr::filter(hash_key=="1951c4d080cda8b68759d638a840d82f") %>% 
  knitr::kable("markdown", caption="Example of database")
#b24908c527faa1b7bd5a267d5dcabd45
#23d88c2b8c6da2d8abf3f88b7ce8a4c0 anomalus case


#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
# FROM PATIENTS (p=85,048), WE JOINED THE PO DATA (n= 174,961, p=49,970) by HASHs and where offense date is equal or lower to the age at discharge from treatment, and restricted the first treatment from SENDA in v10
#v11: erased missing cases in date of birth; thus, missing age at discharge, filtered the first offense by each HASH (going from n= 132,530 to n=87,770) (n=87,770 p= 85,041)
#length(unique(Base_fiscalia_v11$hash_key))
#v12: discarded patients where the first treatment corresponded to ongoing treatments (p & n=5,521), external referral (p & n=8,948) == 14,469 users were discarded.

```

:::

We did not drop censored treatments (never ended), referrals and deaths, so we got `r format(length(unique(Base_fiscalia_v11_grant_23_24$hash_key)), big.mark=",")` users (n= `r format(length(Base_fiscalia_v11_grant_23_24$hash_key), big.mark=",")`). Next, we joined the pre-treatment criminality records.

```{r, "pre-treatment-criminality-___acc_ser_fondecyt_23.R", eval= T}
#Create the variables of pretreatment criminality

Base_fiscalia_v10b_grant_23_24<-
  sqldf::sqldf("SELECT *
  FROM CONS_C1_df_dup_SEP_2020_22_d AS x  
  LEFT JOIN (SELECT *
             FROM Base_fiscalia_v9
             ) AS y
  ON x.hash_key == y.id AND 
  x.edad_al_ing_1 > y.age_offending_imp AND x.dup = 1") #2022-11-25  added dup // #changed the direction to past events, where age at discharge is greater than the age of commission


Base_fiscalia_v11b_grant_23_24<-
  Base_fiscalia_v10b_grant_23_24 %>% 
  #discrepancies in names of variables
  janitor::clean_names() %>%   #janitor::tabyl(!is.na(dob_imp_num))
  #previously recoded, 
  dplyr::select(-dateofbirth_imp, -country, -victim, -id_victim, -crime_code_c , -reg_c, -end_type_2c, -cod_comunadelito, -cod_lugarocurrencia, -sex_imp, -region_delito, -filter, -id)%>%
  plyr::rename(c("dateofbirth_imp_2"="dateofbirth_imp")) %>% 
  dplyr::ungroup() %>% 
  #selected the first row with distinct information regarding patient ID, case ID, crime code.
  dplyr::group_by(hash_key, caseid, crime_code_group_rec_prof) %>%
  dplyr::slice(1) %>% 
  dplyr::ungroup() %>% 
  dplyr::group_by(hash_key) %>% 
  summarise(n_off_acq= ifelse(sum(crime_code_group_rec_prof=="Acquisitive", na.rm=T)>0, 1,0), n_off_vio= ifelse(sum(crime_code_group_rec_prof=="Violent", na.rm=T)>0, 1,0), n_off_sud= ifelse(sum(crime_code_group_rec_prof== "Substance-related", na.rm=T)>0, 1,0), n_off_oth=  ifelse(sum(crime_code_group_rec_prof== "Other", na.rm=T)>0, 1,0)) %>% 
  dplyr::ungroup() %>% 
  dplyr::mutate(n_prev_off= rowSums(select(., starts_with("n_")))) 

warning(paste0("Users in the database of previous crimes: ",format(length(unique(Base_fiscalia_v11b_grant_23_24$hash_key)), big.mark=",")))

warning(paste0("Users in the merged database (after filtering for observations coded as referrals, deaths, censored at baseline treatment or with ongoing treatments) : ",format(length(unique(Base_fiscalia_v11_grant_23_24$hash_key)), big.mark=",")))

# Pre-treatment Criminality 
Base_fiscalia_v13_grant_23_24<-
  Base_fiscalia_v11_grant_23_24 %>% 
  #_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
  # 2023-07-17: we made it in the previous chunk
  #_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
  # dplyr::group_by(hash_key) %>% 
  # #select the first and without ties (only one)
  # dplyr::slice_min(age_offending_imp, n = 1, with_ties = F) %>% 
  # dplyr::ungroup() %>% 
  #_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
  # Join database with the pre-treatment criminality counts
  dplyr::inner_join(Base_fiscalia_v11b_grant_23_24, by="hash_key") %>% 
  dplyr::mutate(policonsumo= ifelse(!is.na(otras_sus1_mod),1,0)) %>% 
  # NO SE SI SIRVE, 2023-07-17 lo saqué
  # dplyr::mutate(cut_fec_nac=cut2(fech_nac_rec, cuts=as.Date(attr(dlookr::binning(as.numeric(fech_nac_rec)),"breaks"))),cut_com_del=cut2(fec_comision_simple, cuts=as.Date(attr(dlookr::binning(as.numeric(fec_comision_simple)),"breaks")))) %>%
  # dplyr::mutate(tr_modality=dplyr::case_when(grepl("PR", as.character(tipo_de_plan_2_1))~  "Residential", grepl("PAI|PAB", as.character(tipo_de_plan_2_1))~ "Ambulatory", T~ NA_character_))%>% 
  data.table::as.data.table()%>% 
  purrr::when(nrow(.)>nrow(Base_fiscalia_v11_grant_23_24)~ stop("More cases in the new database"), ~.) 

#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
warning(paste0("Number of cases that are different by at least 0,02 years between 'edad_al_egres_imp' & 'edad_al_egres_1'= ", nrow(cbind.data.frame(round(Base_fiscalia_v13_grant_23_24$edad_al_ing_1,4), round(Base_fiscalia_v13_grant_23_24$edad_al_ing_fmt,4)) %>% dplyr::filter(abs(.[[1]]-.[[2]])>0.02))," probably due to the discrepancies in getting the differences of dates"))

#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
invisible("Recode in 0/1 for more than one treatment, numeric")
Base_fiscalia_v13_grant_23_24$dup_filt<- ifelse(Base_fiscalia_v13_grant_23_24$duplicates_filtered>1,">1 treatment","only one treatment")

Base_fiscalia_v13_grant_23_24$dup_filt_num<- ifelse(Base_fiscalia_v13_grant_23_24$duplicates_filtered>1,1,0)

invisible("offender after admission (event), numeric")
Base_fiscalia_v13_grant_23_24$offense_after_adm<- ifelse(!is.na(Base_fiscalia_v13_grant_23_24$offender_d),"offender after adm","no offense after admission")

Base_fiscalia_v13_grant_23_24$off_aft_adm<- ifelse(!is.na(Base_fiscalia_v13_grant_23_24$offender_d), 1,0)

invisible("treatment outcome status, numeric")
Base_fiscalia_v13_grant_23_24$mot_egres_mod_imp_rec2<-  dplyr::case_when(Base_fiscalia_v13_grant_23_24$motivodeegreso_mod_imp_rec== "Treatment completion"~ "Tr.Completion", grepl("non", Base_fiscalia_v13_grant_23_24$motivodeegreso_mod_imp_rec)~ "Non-completion", T~"Censored")

Base_fiscalia_v13_grant_23_24$mot_egres_mod_imp_rec_num<- dplyr::case_when(Base_fiscalia_v13_grant_23_24$motivodeegreso_mod_imp_rec=="Treatment completion"~1, grepl("non",Base_fiscalia_v13_grant_23_24$motivodeegreso_mod_imp_rec)~0, T~0)

Base_fiscalia_v13_grant_23_24$mot_egres_mod_imp_rec2<- dplyr::case_when(Base_fiscalia_v13_grant_23_24$motivodeegreso_mod_imp_rec=="Treatment completion"~"Tr.Completion", grepl("non", Base_fiscalia_v13_grant_23_24$motivodeegreso_mod_imp_rec)~ "Non-completion", T~"Censored")

invisible("treatment setting, binary, numeric")
Base_fiscalia_v13_grant_23_24$tr_mod <- ifelse(Base_fiscalia_v13_grant_23_24$tr_modality=="Residential",1,0)
```


<br>

### Discard deaths

First we formatted the dates of discharge of the former database of treatments to get the column of administrative discharge motive and discard deaths.

```{r, "disc-deaths1-format-dates", error=T, eval=T}
load("2_ndp_2023_07_05_20_00_00.RData", ndp_2023_step2 <- new.env() )

cause_of_adm_discharge_ndp_23 <- ndp_2023_step2$CONS_C1_2010_19[,c("hash_key","fecha_egreso_de_tratamiento", "motivo_de_egreso_alta_administrativa")] %>% dplyr::mutate(fecha_egreso_de_tratamiento2=  readr::parse_date(fecha_egreso_de_tratamiento,"%d/%m/%Y")) %>%  janitor::clean_names() %>% 
  dplyr::mutate(fech_egres_num= unclass(fecha_egreso_de_tratamiento)) %>% 
  data.table::as.data.table()

parsing_failures <- dplyr::mutate(ndp_2023_step2$CONS_C1_2010_19[,c("hash_key","fecha_egreso_de_tratamiento")], fecha_egreso_de_tratamiento2=  readr::parse_date(fecha_egreso_de_tratamiento,"%d/%m/%Y")) %>% 
    dplyr::filter(is.na(fecha_egreso_de_tratamiento2) & !is.na(fecha_egreso_de_tratamiento))

#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#delete environment of NDP 2023 Step 2
rm(ndp_2023_step2)

cause_of_adm_discharge_ndp_23_2<-
cause_of_adm_discharge_ndp_23 %>% 
  dplyr::mutate(fecha_egreso_de_tratamiento3=as.character(fecha_egreso_de_tratamiento)) %>% 
  dplyr::mutate(fecha_egreso_de_tratamiento3= 
  dplyr::case_when(
    #1. format %d/%m/%y in minusc y
    fecha_egreso_de_tratamiento3 %in% c("30/12/09", "20/01/10", "23/03/09", "13/05/09", "14/04/09", "15/09/09", "02/06/09", "09/06/09", "01/10/09", "09/03/09", "01/06/10", "03/04/10", "01/10/10", "14/01/11", "04/08/11", "08/07/13") & is.na(fecha_egreso_de_tratamiento2) ~ as.character(readr::parse_date(fecha_egreso_de_tratamiento3,"%d/%m/%y")),
    #2. format %d/%m/%y in minusc y without leading zeros 
    fecha_egreso_de_tratamiento3 %in% c("4102010",  "3052011", "4102010", "13012011", "31012011", "3052011", "13012011", "13082013", "17072013", "12082013", "2082013", "1072013", "31072013", "17062013", "27072013", "25072013", "14072013", "2072013", "2082013", "7082013", "31072013", "27062013", "16082013", "9072013", "2082013", "20082013", "16082013", "22082013") & nchar(fecha_egreso_de_tratamiento3) <= 8 & is.na(fecha_egreso_de_tratamiento2) ~ as.character(readr::parse_date(sprintf("%08d", readr::parse_integer(fecha_egreso_de_tratamiento3)),"%d%m%Y")), 
    #3. format in "%d-%m-%Y"
    fecha_egreso_de_tratamiento3 %in% c("01-02-2011", "06-09-2011", "27-11-2012", "01-03-2013")& is.na(fecha_egreso_de_tratamiento2) ~  as.character(readr::parse_date(fecha_egreso_de_tratamiento3,"%d-%m-%Y")),
    #4. format "%d/%m/%y"
    fecha_egreso_de_tratamiento3 %in% c("10/6/11", "20/6/11", "10/6/11", "10/6/11", "20/6/11", "10/6/11", "10/7/11", "31/7/11", "12/6/11", "1/6/11", "5/6/11", "4/7/11", "31/7/11", "7/7/11", "2/8/11")& is.na(fecha_egreso_de_tratamiento2) ~  as.character(readr::parse_date(fecha_egreso_de_tratamiento3,"%d/%m/%y")),
     #5. format "%d/%m/%y"
    fecha_egreso_de_tratamiento3 %in% c("2013/04/02")& is.na(fecha_egreso_de_tratamiento2) ~  as.character(readr::parse_date(fecha_egreso_de_tratamiento3,"%Y/%m/%d")),
    #Others: keep as character fecha_egreso_de_tratamiento2 
    T~ as.character(fecha_egreso_de_tratamiento2))) #%>% 
  #dplyr::filter(hash_key %in% parsing_failures$hash_key)

#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#impute discharge dates arbitrarely
cause_of_adm_discharge_ndp_23_2$fecha_egreso_de_tratamiento3[which(cause_of_adm_discharge_ndp_23_2$fecha_egreso_de_tratamiento3=="307203")] <- "2013-07-30"
cause_of_adm_discharge_ndp_23_2$fecha_egreso_de_tratamiento3[which(cause_of_adm_discharge_ndp_23_2$fecha_egreso_de_tratamiento=="01707/2010")] <- "2010-07-17"
cause_of_adm_discharge_ndp_23_2$fecha_egreso_de_tratamiento3[which(cause_of_adm_discharge_ndp_23_2$fecha_egreso_de_tratamiento=="30520011")] <- "2011-05-30"
cause_of_adm_discharge_ndp_23_2$fecha_egreso_de_tratamiento3[which(cause_of_adm_discharge_ndp_23_2$fecha_egreso_de_tratamiento=="30/08/20011")] <- "2011-08-30"

#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
# format dates
cause_of_adm_discharge_ndp_23_2$fecha_egreso_de_tratamiento_fmt<-
readr::parse_date(cause_of_adm_discharge_ndp_23_2$fecha_egreso_de_tratamiento3,"%Y-%m-%d")

# format dates to numeric
cause_of_adm_discharge_ndp_23_2$fecha_egreso_de_tratamiento_num<-
 unclass(cause_of_adm_discharge_ndp_23_2$fecha_egreso_de_tratamiento_fmt)

#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#rare: 01707/2010, 30/08/20011, 30520011, 307203
#ambiguous: 2082013, 1072013, 2072013, 2082013, 7082013, 2082013, "10/6/11", "20/6/11", "10/6/11"
  # 2023-07-17, 

#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#Select the cases with death as the motive of administrative discharge
cause_of_adm_discharge_ndp_23_2_filt<-
cause_of_adm_discharge_ndp_23_2 %>% 
  dplyr::filter(motivo_de_egreso_alta_administrativa=="Fallecimiento")
```

Now we discard censorship due to deaths from the original database.

```{r, "disc-deaths1-format-dates-step2", error=T, eval=T}
if(Base_fiscalia_v13_grant_23_24 %>% 
    dplyr::left_join(cause_of_adm_discharge_ndp_23_2_filt[,c("hash_key", "fecha_egreso_de_tratamiento_num","fecha_egreso_de_tratamiento_fmt")], by=c("hash_key")) %>% 
    dplyr::filter(fech_ing_num_1 > fecha_egreso_de_tratamiento_num) %>% nrow() >0){error("There are cases in which people were admitted to treatment after their death")}

if(Base_fiscalia_v13_grant_23_24 %>% 
    dplyr::left_join(cause_of_adm_discharge_ndp_23_2_filt[,c("hash_key", "fecha_egreso_de_tratamiento_num","fecha_egreso_de_tratamiento_fmt")], by=c("hash_key")) %>% 
    dplyr::filter(fech_egres_num_1 > fecha_egreso_de_tratamiento_num) %>% nrow() >0){error("There are cases in which people were discharged of treatment after their death")}

if(Base_fiscalia_v13_grant_23_24 %>% 
    dplyr::left_join(cause_of_adm_discharge_ndp_23_2_filt[,c("hash_key", "fecha_egreso_de_tratamiento_num","fecha_egreso_de_tratamiento_fmt")], by=c("hash_key")) %>% 
    dplyr::mutate(fec_comision_simple_num=unclass(fec_comision_simple)) %>% 
    dplyr::filter(fec_comision_simple_num > fecha_egreso_de_tratamiento_num) %>% nrow() >0){error("There are cases in which people committed an offense after their death")}

# Base_fiscalia_v13_grant_23_24 %>% 
#    dplyr::left_join(cause_of_adm_discharge_ndp_23_2_filt[,c("hash_key", "fecha_egreso_de_tratamiento_num","fecha_egreso_de_tratamiento_fmt")], by=c("hash_key")) %>% 
#    dplyr::mutate(fec_comision_simple_num=unclass(fec_comision_simple)) %>% 
#    #dplyr::filter(fec_comision_simple_num > fecha_egreso_de_tratamiento_num) %>% 
#     dplyr::select(hash_key, fec_comision_simple, fecha_egreso_de_tratamiento_fmt, fec_comision_simple_num, fecha_egreso_de_tratamiento_num) %>% dplyr::filter(!is.na(fecha_egreso_de_tratamiento_fmt)) %>% View()

invisible("It is probable that many SENDA dates are bad, and due to to the process of cleaning made in Fiscalia merge 2 and 3, the correct dates may have been already corrected. However, these databases are not available")
```

<br>

### Bring other databases

### Municipallity

Given that we found no cases with censorship due to deaths, we brought the classification of rurality (from the Census of 2017 in this [link](https://www.masvidarural.gob.cl/wp-content/uploads/2021/04/Clasificacion-comunas-PNDR.xlsx)) and poverty index of communes between 2007-2020 ([link](https://observatorio.ministeriodesarrollosocial.gob.cl/pobreza-comunal)).

```{r, "bring-db0-Fiscalia-merge5", echo=T, fig.align='center', message=T, error=T, eval=T}
#http://observatorio.ministeriodesarrollosocial.gob.cl/pobreza-comunal-2020
#https://www.masvidarural.gob.cl/wp-content/uploads/2021/04/Clasificacion-comunas-PNDR.xlsx

Comunas_PNDR <- readxl::read_excel("Clasificacion-comunas-PNDR.xlsx")%>% 
  dplyr::mutate(cod= dplyr::case_when(as.character(cod_com)=="16101"~"8401",
                                      as.character(cod_com)=="16102"~"8402",
                                      as.character(cod_com)=="16103"~"8406",
                                      as.character(cod_com)=="16104"~"8407",
                                      as.character(cod_com)=="16105"~"8410",
                                      as.character(cod_com)=="16106"~"8411",
                                      as.character(cod_com)=="16107"~"8413",
                                      as.character(cod_com)=="16108"~"8418",
                                      as.character(cod_com)=="16109"~"8421",
                                      as.character(cod_com)=="16201"~"8414",
                                      as.character(cod_com)=="16202"~"8403",
                                      as.character(cod_com)=="16203"~"8404",
                                      as.character(cod_com)=="16204"~"8408",
                                      as.character(cod_com)=="16205"~"8412",
                                      as.character(cod_com)=="16206"~"8415",
                                      as.character(cod_com)=="16207"~"8420",
                                      as.character(cod_com)=="16301"~"8416",
                                      as.character(cod_com)=="16302"~"8405",
                                      as.character(cod_com)=="16303"~"8409",
                                      as.character(cod_com)=="16304"~"8417",
                                      as.character(cod_com)=="16305"~"8419",
                                      T~ as.character(cod_com)
                                      ))

#http://observatorio.ministeriodesarrollosocial.gob.cl/pobreza-comunal-2011
pobr_mult_2020<-readxl::read_excel("Estimaciones_de_Tasa_de_Pobreza_por_Ingresos_por_Comunas_2020_revisada2022_09.xlsx", skip=1) %>% dplyr::mutate(anio=2020) %>% 
    dplyr::rename_with(~ "porc_pobr", dplyr::contains("Porcentaje de")) %>%
  dplyr::select(anio, Código, Región, `Nombre comuna`, porc_pobr)

pobr_mult_2019<-readxl::read_excel("Estimaciones_de_Tasa_de_Pobreza_por_Ingresos_por_Comunas_2020_revisada2022_09.xlsx", skip=1) %>% dplyr::mutate(anio=2019) %>% 
      dplyr::rename_with(~ "porc_pobr", dplyr::contains("Porcentaje de")) %>%
  dplyr::select(anio, Código, Región, `Nombre comuna`, porc_pobr)

pobr_mult_2018<-readxl::read_excel("PLANILLA_Estimaciones_comunales_tasa_pobreza_por_ingresos_multidimensional_2017.xlsx", skip=1) %>% dplyr::mutate(anio=2018) %>% 
  dplyr::rename_with(~ "porc_pobr", dplyr::contains("Porcentaje de")) %>%
  dplyr::select(anio, Código, Región, `Nombre comuna`, porc_pobr)

pobr_mult_2017<-readxl::read_excel("PLANILLA_Estimaciones_comunales_tasa_pobreza_por_ingresos_multidimensional_2017.xlsx", skip=1) %>% dplyr::mutate(anio=2017) %>% 
  dplyr::rename_with(~ "porc_pobr", dplyr::contains("Porcentaje de")) %>%
  dplyr::select(anio, Código, Región, `Nombre comuna`, porc_pobr)

pobr_mult_2016<-readxl::read_excel("PLANILLA_Estimaciones_comunales_tasa_pobreza_por_ingresos_multidimensional_2015.xlsx", skip=1) %>% dplyr::mutate(anio=2016) %>% 
  dplyr::rename_with(~ "porc_pobr", dplyr::contains("Porcentaje de")) %>%
  dplyr::select(anio, Código, Región, `Nombre comuna`, porc_pobr)

pobr_mult_2015<-readxl::read_excel("PLANILLA_Estimaciones_comunales_tasa_pobreza_por_ingresos_multidimensional_2015.xlsx", skip=1) %>% dplyr::mutate(anio=2015) %>% 
  dplyr::rename_with(~ "porc_pobr", dplyr::contains("Porcentaje de")) %>%
  dplyr::select(anio, Código, Región, `Nombre comuna`, porc_pobr)

pobr_mult_2014<-readxl::read_excel("PLANILLA_Estimaciones_comunales_tasa_pobreza_por_ingresos_2013.xlsx", skip=1)%>% dplyr::mutate(anio=2014) %>% 
  dplyr::rename_with(~ "porc_pobr", dplyr::contains("Porcentaje de")) %>%
  dplyr::select(anio, Código, Región, `Nombre comuna`, porc_pobr)

pobr_mult_2013<-readxl::read_excel("PLANILLA_Estimaciones_comunales_tasa_pobreza_por_ingresos_2013.xlsx", skip=1)%>% dplyr::mutate(anio=2013) %>% 
  dplyr::rename_with(~ "porc_pobr", dplyr::contains("Porcentaje de")) %>%
  dplyr::select(anio, Código, Región, `Nombre comuna`, porc_pobr)

pobr_mult_2012<-readxl::read_excel("Estimacion_tasa_de_pobreza_comunal_2011_(nueva _metodologia).xlsx", skip=1)%>% dplyr::mutate(anio=2012) %>% 
  dplyr::rename_with(~ "porc_pobr", dplyr::contains("Porcentaje de")) %>%
  dplyr::select(anio, Código, Región, `Nombre comuna`, porc_pobr)

pobr_mult_2011<-readxl::read_excel("Estimacion_tasa_de_pobreza_comunal_2011_(nueva _metodologia).xlsx", skip=1)%>% dplyr::mutate(anio=2011) %>% 
  dplyr::rename_with(~ "porc_pobr", dplyr::contains("Porcentaje de")) %>%
  dplyr::select(anio, Código, Región, `Nombre comuna`, porc_pobr)

pobr_mult_2010<-readxl::read_excel("Estimacion_tasa_de_pobreza_comunal_2011_(nueva _metodologia).xlsx", skip=1)%>% dplyr::mutate(anio=2010)  %>% 
  dplyr::rename_with(~ "porc_pobr", dplyr::contains("Porcentaje de")) %>%
  dplyr::select(anio, Código, Región, `Nombre comuna`, porc_pobr)

pobr_mult_2009<-readxl::read_excel("PobrezaporComunas_SAE_20092011.xlsx", skip=3)%>% dplyr::mutate(anio=2009) %>% dplyr::select(anio, everything()) %>% dplyr::select(1:5) %>% 
  dplyr::rename_with(~ "porc_pobr", dplyr::contains("Incidencia pobreza")) %>%
 dplyr::rename("Código"=2, "Nombre comuna"=3) %>%  dplyr::mutate(Región=rep("")) %>%  dplyr::select(anio, Código, Región, `Nombre comuna`, porc_pobr)
pobr_mult_2008<-readxl::read_excel("PobrezaporComunas_SAE_20092011.xlsx", skip=3)%>% dplyr::mutate(anio=2008) %>% dplyr::select(anio, everything()) %>% dplyr::select(1:5) %>%    dplyr::rename_with(~ "porc_pobr", dplyr::contains("Incidencia pobreza")) %>%
dplyr::rename("Código"=2, "Nombre comuna"=3) %>%  dplyr::mutate(Región=rep("")) %>%  dplyr::select(anio, Código, Región, `Nombre comuna`, porc_pobr)
pobr_mult_2007<-readxl::read_excel("PobrezaporComunas_SAE_20092011.xlsx", skip=3)%>% dplyr::mutate(anio=2007) %>% dplyr::select(anio, everything()) %>% dplyr::select(1:5) %>%  dplyr::rename_with(~ "porc_pobr", dplyr::contains("Incidencia pobreza")) %>% dplyr::rename("Código"=2, "Nombre comuna"=3) %>%  dplyr::mutate(Región=rep("")) %>%  dplyr::select(anio, Código, Región, `Nombre comuna`, porc_pobr)

pobr_mult_2007_2020<-
rbind.data.frame(pobr_mult_2007, pobr_mult_2008, pobr_mult_2009, pobr_mult_2010, pobr_mult_2011, pobr_mult_2012, pobr_mult_2013, pobr_mult_2014, pobr_mult_2015, pobr_mult_2016, pobr_mult_2017, pobr_mult_2018, pobr_mult_2019, pobr_mult_2020) %>% 
  dplyr::mutate(cod= dplyr::case_when(Código=="16101"~"8401",
                                      Código=="16102"~"8402",
                                      Código=="16103"~"8406",
                                      Código=="16104"~"8407",
                                      Código=="16105"~"8410",
                                      Código=="16106"~"8411",
                                      Código=="16107"~"8413",
                                      Código=="16108"~"8418",
                                      Código=="16109"~"8421",
                                      Código=="16201"~"8414",
                                      Código=="16202"~"8403",
                                      Código=="16203"~"8404",
                                      Código=="16204"~"8408",
                                      Código=="16205"~"8412",
                                      Código=="16206"~"8415",
                                      Código=="16207"~"8420",
                                      Código=="16301"~"8416",
                                      Código=="16302"~"8405",
                                      Código=="16303"~"8409",
                                      Código=="16304"~"8417",
                                      Código=="16305"~"8419",
                                      T~ Código
                                      ))

#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
# Delete `pobr_mult_` object 
#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
object_names <- paste0("pobr_mult_", 2007:2020)

for (name in object_names) {
  if(exists(name)) {  # Check if object exists
    rm(list = name)
  }
}
```

### SENDA September 2020

```{r, "bring-db1-format-variables",echo=T}
invisible("Retrieve CONS_C1_df_dup_SEP_2020 from previous 8.RData (Fondecyt 1191282)")

load("13.RData", fiscalia_merge3 <- new.env() )

CONS_C1_df_dup_SEP_2020<- fiscalia_merge3$CONS_C1_df_dup_SEP_2020

rm(fiscalia_merge3)
#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
invisible("Make the database")

Base_fiscalia_v14_grant_23_24<-
Base_fiscalia_v13_grant_23_24 %>%
  dplyr::mutate(comuna_residencia_cod_rec= as.character(readr::parse_number(comuna_residencia_cod)), anio_ing_tr= lubridate::epiyear(fech_ing)) %>% #glimpse()
  dplyr::left_join(pobr_mult_2007_2020[,c("anio", "cod","porc_pobr")], by= c("comuna_residencia_cod_rec"="cod", "anio_ing_tr"="anio")) %>% 
  dplyr::left_join(Comunas_PNDR[,c("cod", "Clasificación")], by= c("comuna_residencia_cod_rec"="cod"))%>%
  #2023-07-17: we eliminated class_centros
  #2023-02-01
  # dplyr::left_join(class_centros[,c("id_centro", "nombre_centro_1", "classification")], by= "id_centro")%>%
    purrr::when(nrow(.)>nrow(Base_fiscalia_v13_grant_23_24) ~ stop("More cases in the new database"), ~.) %>% 
  #2023-07-17: create the event and time to event
  #_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
  # ages at offense vs. ages at discharge
    dplyr::mutate(warning_needed = age_offending_imp - edad_al_egres_1 < 0) %>%
  {if(any(.$warning_needed, na.rm = TRUE)) warning(paste("Cases with offense ages lower than age at discharge: ", format(sum(.$warning_needed, na.rm=T), big.mark=","))); .} %>%
  dplyr::select(-warning_needed) %>% 
  # ages at offense vs. ages at discharge
  #    dplyr::filter(dplyr::case_when(edad_al_egres_1 - edad_al_ing_1 < 0~F,T~T))
  dplyr::mutate(warning_needed = edad_al_egres_1 - edad_al_ing_1 < 0) %>%
  {if(any(.$warning_needed, na.rm = TRUE)) warning(paste("Cases with ages at discharge lower than age at admission: ", format(sum(.$warning_needed, na.rm=T), big.mark=","))); .} %>%
  dplyr::select(-warning_needed) %>% 
  # ages at offense vs. ages at admission
  dplyr::mutate(warning_needed = age_offending_imp - edad_al_ing_1 < 0) %>%
  {if(any(.$warning_needed, na.rm = TRUE)) warning(paste("Cases with offense ages lower than age at admission: ", format(sum(.$warning_needed, na.rm=T), big.mark=","))); .} %>%
  dplyr::select(-warning_needed) %>% 
  #_#_#_#_#_#_#_#_#_#_
  # 2023-07-17: modify ages to event and event. Get dichotomous variables created earlier
  #_#_#_#_#_#_#_#_#_#_  
  dplyr::mutate(age_offending_imp= dplyr::case_when(age_offending_imp-edad_al_egres_1<=0~ age_offending_imp+ 0.0001,T~age_offending_imp), event_offense= off_aft_adm)%>%
  dplyr::mutate(age_tr_comp_imp= dplyr::case_when(edad_al_egres_1-edad_al_ing_1<=0~ edad_al_egres_1+ 0.0001,T~edad_al_egres_1), event_comp= mot_egres_mod_imp_rec_num)%>%  
  #_#_#_#_#_#_#_#_#_#_
  # 2023-07-17: modify ages according to age at censorship if the event is not observed in the time frame
  #_#_#_#_#_#_#_#_#_#_  
  dplyr::mutate(age_offending_imp= dplyr::case_when(event_offense==0~
lubridate::time_length(lubridate::interval(fech_nac_rec, as.Date("2019-11-13")),unit="years"), T~ age_offending_imp)) %>% 
  dplyr::mutate(age_tr_comp_imp= dplyr::case_when(event_comp==0~
lubridate::time_length(lubridate::interval(fech_nac_rec, as.Date("2019-11-13")),unit="years"), T~ age_tr_comp_imp)) %>%   
  dplyr::mutate(age_at_censor_date=lubridate::time_length(lubridate::interval(fech_nac_rec, as.Date("2019-11-13")),unit="years")) %>% 
  #_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
  dplyr::mutate(time_to_off_from_adm= dplyr::case_when(event_offense==0~ age_at_censor_date- edad_al_ing_1, T~ age_offending_imp-edad_al_ing_1)) %>%
    dplyr::mutate(time_to_drop_from_adm= dplyr::case_when(event_offense==0~ age_at_censor_date- edad_al_ing_1, T~ age_tr_comp_imp-edad_al_ing_1)) %>%
  #_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
  dplyr::mutate(freq_cons_sus_prin= dplyr::case_when(as.character(freq_cons_sus_prin)=="Did not use"~"Less than 1 day a week", T~ as.character(freq_cons_sus_prin)))%>%
  dplyr::mutate(escolaridad_rec=parse_factor(as.character(escolaridad_rec),levels=c('3-Completed primary school or less', '2-Completed high school or less', '1-More than high school'), ordered =T,trim_ws=T,include_na =F, locale=locale(encoding = "Latin1"))) %>%  
  dplyr::mutate(freq_cons_sus_prin=parse_factor(as.character(freq_cons_sus_prin),levels=c('Less than 1 day a week','2 to 3 days a week','4 to 6 days a week','1 day a week or more','Daily'), ordered =T,trim_ws=F,include_na =F)) %>% #, locale=locale(encoding = "Latin1")
  dplyr::mutate(across(c("motivodeegreso_mod_imp_rec","sus_principal_mod", "origen_ingreso_mod", "tenencia_de_la_vivienda_mod", "condicion_ocupacional_corr", "dg_cie_10_rec", "macrozona", "n_off_vio", "n_off_acq", "n_off_sud", "n_off_oth"),~as.factor(.)))%>% 
  dplyr::mutate(via_adm_sus_prin_act= factor(dplyr::case_when(via_adm_sus_prin_act=="Injected Intravenously or Intramuscularly"~ "Other",T~via_adm_sus_prin_act))) %>% 
#TO CHECK IF SOME MUNICIPALLITIES DID NOT JOIN
  #dplyr::filter(is.na(porc_pobr)) %>% dplyr::select(comuna_residencia_cod, anio_ing_tr)
  dplyr::mutate(con_quien_vive_joel=dplyr::case_when(
    grepl("Solo$",con_quien_vive, ignore.case=T)~"Alone",
    grepl("Con abuelos",con_quien_vive, ignore.case=T)~"Family of origin",
    grepl("Con hermanos",con_quien_vive, ignore.case=T)~"Family of origin",
    grepl("Con la madre \\(sola\\)",con_quien_vive, ignore.case=T)~"Family of origin",
    grepl("Con otro pariente",con_quien_vive, ignore.case=T)~"Others",
    grepl("con hijos y padres o familia",con_quien_vive, ignore.case=T)~"Family of origin",
    grepl("con la pareja y padres o familia de origen",con_quien_vive, ignore.case=T)~"With couple/children",
    grepl("con padres o familia de origen",con_quien_vive, ignore.case=T)~"Family of origin",
    #2021-10-01
    grepl("Únicamente con hijos",con_quien_vive, ignore.case=T)~"With couple/children",
    grepl("Únicamente con pareja",con_quien_vive, ignore.case=T)~"With couple/children",
    #2021-10-01
    grepl("Con la Pareja, Hijos y Padres o Familia de Origen",con_quien_vive, ignore.case=T)~"With couple/children",
    grepl("Hijos y Padres o Familia de Origen",con_quien_vive, ignore.case=T)~"Family of origin",
    #2021-10-01
    grepl("Únicamente con la pareja e hijos",con_quien_vive, ignore.case=T)~"With couple/children",
    grepl("Con amigos",con_quien_vive, ignore.case=T)~"Others",
    grepl("Con otro NO pariente",con_quien_vive, ignore.case=T)~"Others",
    grepl("*Otros$",con_quien_vive, ignore.case=T)~"Others")) %>% 
  dplyr::left_join(subset(CONS_C1_df_dup_SEP_2020, dup==1, c("hash_key","embarazo")), by= "hash_key")%>%
  dplyr::mutate(numero_de_hijos_mod_joel=dplyr::case_when(grepl("Si$",embarazo, ignore.case=T)~as.integer(numero_de_hijos_mod+1),T~as.integer(numero_de_hijos_mod)))  %>% 
  dplyr::mutate(ano_nac_corr=as.numeric(stringr::str_sub(as.character(fech_nac_rec),1,4))) %>% 
  dplyr::mutate(num_hijos_mod_joel_bin=dplyr::if_else(numero_de_hijos_mod_joel>0, 1, 0)) %>%
  dplyr::mutate(across(c("dg_fis_otr_cond_fis_ries_vit", "dg_fis_pat_ges_intrau", "dg_fis_hep_cro", "dg_fis_hep_alc", "dg_fis_enf_som", "dg_fis_otr_cond_fis", "dg_fis_hep_alc", "dg_fis_ets", "dg_fis_card"), ~as.numeric(.)-1)) %>%
  dplyr::mutate(dg_fis_total = rowSums(dplyr::select(., c("dg_fis_otr_cond_fis_ries_vit", "dg_fis_pat_ges_intrau", "dg_fis_hep_cro", "dg_fis_hep_alc", "dg_fis_enf_som", "dg_fis_otr_cond_fis", "dg_fis_hep_alc", "dg_fis_ets", "dg_fis_card")))) %>% 
  dplyr::mutate(cnt_dg_trs_fis= dplyr::case_when(dg_fis_total>=1~ "One or more", as.character(dg_fis_in_study)== "Presence" & dg_fis_total== 0~"Diagnosis unknown (under study)", dg_fis_total==0~"Without physical comorbidity")) %>% #janitor::tabyl(cnt_dg_trs_fis)
  dplyr::mutate(fis_comorbidity_icd_10=parse_factor(as.character(cnt_dg_trs_fis),levels=c('Without physical comorbidity', 'Diagnosis unknown (under study)','One or more'), ordered =T,trim_ws=F,include_na =F)) %>% #, locale=locale(encoding = "Latin1") 

#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
  # 2023-07-31
    dplyr::left_join(dplyr::distinct(cause_of_adm_discharge_ndp_23_2_filt,hash_key,.keep_all = T)[,c("hash_key", "fecha_egreso_de_tratamiento_fmt")], by="hash_key")%>%
  dplyr::rename("date_death"="fecha_egreso_de_tratamiento_fmt") %>% 
    dplyr::mutate(age_at_death= dplyr::case_when(!is.na(date_death)~
lubridate::time_length(lubridate::interval(fech_nac_rec, date_death),unit="years"), T~ age_at_censor_date)) %>%
    dplyr::mutate(event_death=ifelse(!is.na(date_death),1,0)) %>% 
#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_  
  dplyr::mutate_at(paste0("otras_sus",1:3,"_mod"),~ dplyr::case_when(.=="Cocaína"~ "Cocaine hydrochloride", .=="Marihuana"~ "Marijuana", .=="Otros"~"Other", .=="Pasta Base"~ "Cocaine paste", T~.)) %>% 
  dplyr::mutate(sus_principal_mod= as.character(sus_principal_mod)) %>% 
  # Replace with missing if there are any duplicates
  dplyr::mutate(otras_sus3_mod= dplyr::case_when(otras_sus3_mod==otras_sus2_mod| otras_sus3_mod==otras_sus1_mod| otras_sus3_mod==sus_principal_mod~ NA_character_, T~ otras_sus3_mod)) %>% 
  dplyr::mutate(otras_sus2_mod= dplyr::case_when(otras_sus2_mod==otras_sus1_mod| otras_sus2_mod== sus_principal_mod~ NA_character_, T~ otras_sus2_mod)) %>% 
  dplyr::mutate(otras_sus1_mod= dplyr::case_when(otras_sus1_mod== sus_principal_mod~ NA_character_, T~ otras_sus1_mod)) %>% 
  # Empty substances were replaced with the previous
  dplyr::mutate(otras_sus2_mod= dplyr::case_when(!is.na(otras_sus3_mod) & is.na(otras_sus2_mod)~ otras_sus3_mod, T~ otras_sus2_mod)) %>% 
  dplyr::mutate(otras_sus1_mod= dplyr::case_when(!is.na(otras_sus2_mod) & is.na(otras_sus1_mod)~ otras_sus2_mod, T~ otras_sus1_mod)) %>%
  dplyr::mutate(sus_principal_mod= dplyr::case_when(!is.na(otras_sus1_mod) & is.na(sus_principal_mod)~ otras_sus1_mod, T~ sus_principal_mod)) %>%  
  # Replace with missing if there are any duplicates
  dplyr::mutate(otras_sus3_mod= dplyr::case_when(otras_sus3_mod==otras_sus2_mod| otras_sus3_mod==otras_sus1_mod| otras_sus3_mod==sus_principal_mod~ NA_character_, T~ otras_sus3_mod)) %>% 
  dplyr::mutate(otras_sus2_mod= dplyr::case_when(otras_sus2_mod==otras_sus1_mod| otras_sus2_mod== sus_principal_mod~ NA_character_, T~ otras_sus2_mod)) %>% 
  dplyr::mutate(otras_sus1_mod= dplyr::case_when(otras_sus1_mod== sus_principal_mod~ NA_character_, T~ otras_sus1_mod)) %>%   
    # Replace with missing if there are any duplicates
  dplyr::mutate(otras_sus3_mod= dplyr::case_when(otras_sus3_mod==otras_sus2_mod| otras_sus3_mod==otras_sus1_mod| otras_sus3_mod==sus_principal_mod~ NA_character_, T~ otras_sus3_mod)) %>% 
  dplyr::mutate(otras_sus2_mod= dplyr::case_when(otras_sus2_mod==otras_sus1_mod| otras_sus2_mod== sus_principal_mod~ NA_character_, T~ otras_sus2_mod)) %>% 
  dplyr::mutate(otras_sus1_mod= dplyr::case_when(otras_sus1_mod== sus_principal_mod~ NA_character_, T~ otras_sus1_mod)) %>%  
  data.table::data.table()
  
#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
invisible("Add the last variable")

#2023-07-17: Rurality classification
Base_fiscalia_v14_grant_23_24$clas_r <- relevel(factor(Base_fiscalia_v14_grant_23_24$Clasificación), ref = "Urbana")
#2023-07-17: we bring Fiscalia merge5 classification
Base_fiscalia_v14_grant_23_24$via_adm_sus_prin_act <- relevel(factor(Base_fiscalia_v14_grant_23_24$via_adm_sus_prin_act), ref = "Oral (drunk or eaten)")

#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_

```
### Victim data

```{r, "victims-sud"}
invisible("Retrieve CONS_C1_df_dup_SEP_2020 from previous 8.RData (Fondecyt 1191282)")

load("14.Rdata", data_mariel_fisc_merge4 <- new.env() )

#offenses that threatens psychosexual integrity
#https://amparoyjusticia.cl/wp-content/uploads/2023/04/Estudio-Fundacion-amparo-y-Justicia.pdf
delitos <- c("ABANDONO DE NIÑOS",
             "ABORTO SIN CONSENTIMIENTO",
             "ABUSO SEX C/CONTACTO CORP. A MENOR DE 14 AÑOS ART 366 BIS",
             "ABUSO SEX MAYOR 14/MENOR 18 CON CIRCUNS ESTUPRO ART 366 INC2",
             "ABUSO SEX MAYOR DE 14 AÑOS POR SORPRESA Y/O S/CONSENTIM. ART",
             "ABUSO SEX. S/CONTAC MAYOR 14 MENOR 18 ART 366 QUAT INC 3,4,5",
             "ABUSO SEX. S/CONTACTO CORP. MENOR 14 ART 366 QUAT. INC 1 Y 2",
             "ABUSO SEXUAL CALIFICADO (CON OBJETOS O ANIMALES)ART.365 BIS",
             "ABUSO SEXUAL DE MAYOR DE 14 (CON CIRC. DE VIOLACIÓN) ART 366",
             "ADQ. O ALMACENAMIENTO MAT.PORNOGRÁFICO INF.ART.374 BIS INC 2",
             "CASTRACIÓN Y MUTILACIÓN",
             "COMERCIALIZACIÓN MAT. PORNOGRÁFICO ELAB.UTIL. MEN.DE 18 AÑOS",
             "ESTUPRO",
             "FEMICIDIO INTIMO ART. 390 BIS",
             "INDUCIR A UN MENOR A ABANDONAR EL HOGAR",
             "INFANTICIDIO",
             "MALTRATO CORPORAL A PERSONAS VULNERABLES ART 403 BIS INC 1°",
             "OBTENCIÓN DE SERVICIOS SEXUALES DE MENORES. ART. 367 TER.",
             "OFENSAS AL PUDOR (495 Nº 5 Código Penal)",
             "OTROS ABUSOS CONTRA PARTICULARES.ART. 256,257,258,259",
             "OTROS DEL C/ ORDEN FAMILIA, MORALIDAD Pº, INTEGRIDAD SEXUAL",
             "PRESUNTA DESGRACIA INFANTIL",
             "PRODUCCIÓN MATERIAL PORNOGRÁFICO UTILIZANDO MENOR.DE 18 AÑOS",
             "ROBO CON VIOLACIÓN. ART. 433 Nº1.",
             "SECUESTRO CON HOMICIDIO, VIOLACIÓN O LES. ART.141 INC. FINAL",
             "SECUESTRO CON VIOLACIÓN",
             "SODOMIA. ART. 365.",
             "SUSTRACCIÓN DE MENORES. ART. 142",
             "TRATA DE PERSONAS PARA LA EXPLOTACIÓN SEXUAL ART 411 QUATER",
             "ULTRAJE PÚBLICO A LAS BUENAS COSTUMBRES POR MED.COM.SOCIAL",
             "ULTRAJE PÚBLICO A LAS BUENAS COSTUMBRES. ART. 373.",
             "VIOLACIÓN DE MAYOR DE 14 AÑOS. ART. 361.",
             "VIOLACIÓN DE MENOR DE 14 AÑOS. ART. 362.",
             "INCESTO",
             "TORTURAS COMETIDAS POR FUNCIONARIOS PÚBLICOS (150 A INC 1)",
             "TORTURAS POR PARTICULARES AGENTES DEL ESTADO (150 A INC. 2)",
             "TRATA PARA TRABAJOS FORZADOS Y OTROS ART411 QUATER INC1°",
             "TRATOS DEGRADANTES A PERSONAS VULNERABLES. ART. 403 TER.",
             "VIOLACIÓN CON HOMICIDIO O FEMICIDIO ART. 372 BIS."
)

Base_fiscalia_v8_vic<- data_mariel_fisc_merge4$Base_fiscalia_v8 %>% 
  dplyr::filter(encontrado_como_victima=="SI") %>% 
  dplyr::filter(gls_materia %in% delitos)

Base_fiscalia_v8_vic_distinct<- 
data_mariel_fisc_merge4$Base_fiscalia_v8 %>% 
    dplyr::filter(encontrado_como_victima=="SI") %>%
  dplyr::distinct(gls_materia)

Base_fiscalia_v8_vic_distinct %>% 
  rio::export("offenses_victims.xlsx")

rm(data_mariel_fisc_merge4)
#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#cod_delito, gls_materia fec_comision_simple, relacion_vifsaf edad_comision_imp
# 
# Base_fiscalia_v9 %>% 
# +     dplyr::filter(relacion_vifsaf=="SI") %>% 
# +     dplyr::distinct(crime_code_c)

Base_fiscalia_v8_vic2<- Base_fiscalia_v8_vic %>% 
  dplyr::select(rut_enc_saf, cod_delito, gls_materia, edad_comision_imp, fec_comision_simple, relacion_vifsaf, edad_comision_imp) %>% 
  dplyr::filter(!gls_materia== "PRESUNTA DESGRACIA INFANTIL")

#1,906 individuals

Base_fiscalia_v15_grant_23_24<-
  sqldf::sqldf("SELECT *
  FROM Base_fiscalia_v14_grant_23_24 AS x  
  LEFT JOIN (SELECT *
             FROM Base_fiscalia_v8_vic2
             ) AS y
  ON x.hash_key == y.rut_enc_saf AND 
  x.edad_al_ing_1 > y.edad_comision_imp AND x.dup = 1") #2022-11-25  added dup // #changed the direction to past events, where age at discharge is greater than the age of commission
warning(
paste("Rows added: ", 
      nrow(Base_fiscalia_v15_grant_23_24)- nrow(Base_fiscalia_v14_grant_23_24)))

if(exists("no_mostrar")){
janitor::clean_names(Base_fiscalia_v15_grant_23_24) %>% 
  dplyr::group_by(hash_key) %>% 
  dplyr::mutate(n=n()) %>% 
  dplyr::ungroup() %>% 
  dplyr::select(-rut_enc_saf) %>% 
  dplyr::filter(n>1) %>%
  dplyr::select(hash_key, edad_al_ing_1,gls_materia, edad_comision_imp, fec_comision_simple_2, relacion_vifsaf_2,n) %>% 
  View()
}

#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#edad_comision_imp, fec_comision_simple_2, relacion_vifsaf_2

# Get the first offense by user
Base_fiscalia_v15b_grant_23_24<-
    janitor::clean_names(Base_fiscalia_v15_grant_23_24) %>% 
    dplyr::group_by(hash_key) %>% 
    dplyr::slice(n=1, with_ties=F) %>% 
    dplyr::ungroup() %>% 
    dplyr::select(-rut_enc_saf) %>% 
    data.table::as.data.table()

# count distinct previous offenses in terms of date and type of offense
more_than_one_offense_as_victim<-  
janitor::clean_names(Base_fiscalia_v15_grant_23_24) %>% 
  dplyr::mutate(comb_prueba= paste0(edad_comision_imp,"_", gls_materia)) %>% 
  dplyr::group_by(comb_prueba) %>% 
  dplyr::slice(n=1, with_ties=F) %>% 
  dplyr::ungroup() %>% 
  dplyr::select(-rut_enc_saf) %>%  
  dplyr::select(hash_key, edad_comision_imp, gls_materia) %>% 
  dplyr::group_by(hash_key) %>% 
  dplyr::summarise(n=n()) %>% 
  dplyr::ungroup()
  
#integrate the count of records as victim of patietns
Base_fiscalia_v15c_grant_23_24<-
Base_fiscalia_v15b_grant_23_24 %>% 
  dplyr::left_join(more_than_one_offense_as_victim, by="hash_key") %>% 
  dplyr::rename("n_off_vict"="n") %>% 
  dplyr::mutate(n_off_vict= dplyr::case_when(is.na(n_off_vict)~0, T~ as.numeric(n_off_vict))) %>% 
  data.table::as.data.table()

#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
cat("Cases that dropped out")
Base_fiscalia_v14_grant_23_24 %>% 
     janitor::tabyl(event_comp, event_death)
Base_fiscalia_v14_grant_23_24 %>% 
     janitor::tabyl(event_offense, event_death)
```

<br>

## Descriptives

Generate the event dates and time to events.

```{r, "bring-db2-label-variables",echo=T}
invisible("Label variables")

#2023-07-19
attr(Base_fiscalia_v15c_grant_23_24$motivodeegreso_mod_imp_rec,"label") <- "Complete status of treatment (binary)"
attr(Base_fiscalia_v15c_grant_23_24$offense_after_adm,"label") <- "Committing an offense after admission (binary)"
attr(Base_fiscalia_v15c_grant_23_24$age_at_censor_date,"label") <- "Age at censorship"
attr(Base_fiscalia_v15c_grant_23_24$age_offending_imp,"label") <- "Age at offending"
attr(Base_fiscalia_v15c_grant_23_24$age_tr_comp_imp,"label") <- "Age at completing tr."

#attr(Base_fiscalia_v15c_grant_23_24$tr_modality,"label") <- "Treatment Modality"
attr(Base_fiscalia_v15c_grant_23_24$time_to_off_from_adm,"label") <- "Time to offense from admission"
attr(Base_fiscalia_v15c_grant_23_24$time_to_drop_from_adm,"label") <- "Time to dropout from admission"

#2023-07-31
attr(Base_fiscalia_v15c_grant_23_24$age_at_death,"label") <- "Age at death"
attr(Base_fiscalia_v15c_grant_23_24$date_death,"label") <- "Time to death from admission"
attr(Base_fiscalia_v15c_grant_23_24$event_death,"label") <- "Death from admission"

attr(Base_fiscalia_v15c_grant_23_24$event_comp,"label") <- "Event: tr.completion"
attr(Base_fiscalia_v15c_grant_23_24$event_offense,"label") <- "Event: offense"


attr(Base_fiscalia_v15c_grant_23_24$edad_al_ing_1,"label") <- "Age (admission to treatment)"
attr(Base_fiscalia_v15c_grant_23_24$sex,"label") <- "Sex"
attr(Base_fiscalia_v15c_grant_23_24$edad_ini_cons,"label") <- "Age of Onset of Substance Use"
attr(Base_fiscalia_v15c_grant_23_24$escolaridad_rec,"label") <- "Educational Attainment"
attr(Base_fiscalia_v15c_grant_23_24$sus_principal_mod,"label") <- "Primary Substance (admission to treatment)"
attr(Base_fiscalia_v15c_grant_23_24$freq_cons_sus_prin,"label") <- "Frequency of Substance Use (Primary Substance)"
attr(Base_fiscalia_v15c_grant_23_24$condicion_ocupacional_corr,"label") <- "Corrected Occupational Status (f)"
attr(Base_fiscalia_v15c_grant_23_24$policonsumo,"label") <- "Co-occurring Substance Use Disorders (Polysubstance use)"

#20203-07-17
attr(Base_fiscalia_v15c_grant_23_24$otras_sus1_mod,"label") <- "First additional substance at admission"
attr(Base_fiscalia_v15c_grant_23_24$otras_sus2_mod,"label") <- "Second additional substance at admission"
attr(Base_fiscalia_v15c_grant_23_24$otras_sus3_mod,"label") <- "Third additional substance at admission"

attr(Base_fiscalia_v15c_grant_23_24$num_hijos_mod_joel_bin,"label") <- "Number of Children (dichotomized)"
attr(Base_fiscalia_v15c_grant_23_24$tenencia_de_la_vivienda_mod,"label") <- "Housing Situation (Tenure Status)"
attr(Base_fiscalia_v15c_grant_23_24$macrozona,"label") <- "Macro Administrative Zone in Chile"
attr(Base_fiscalia_v15c_grant_23_24$n_off_vio,"label") <- "Violent Criminal Offenses (Pre-Treatment)"
attr(Base_fiscalia_v15c_grant_23_24$n_off_acq,"label") <- "Acquisitive Criminal Offenses (Pre-Treatment)"
attr(Base_fiscalia_v15c_grant_23_24$n_off_sud,"label") <- "Substance-Related Criminal Offenses (Pre-Treatment)"
attr(Base_fiscalia_v15c_grant_23_24$n_off_oth,"label") <- "Other Criminal Offenses (Pre-Treatment)"
attr(Base_fiscalia_v15c_grant_23_24$dg_cie_10_rec,"label") <- "Psychiatric Comorbidity (ICD-10)"
attr(Base_fiscalia_v15c_grant_23_24$dg_trs_cons_sus_or,"label") <- "SUD Severity (Dependence status)"
attr(Base_fiscalia_v15c_grant_23_24$clas_r,"label") <- "Socioeconomic Classification"
attr(Base_fiscalia_v15c_grant_23_24$porc_pobr,"label") <- "Percentage of people in poverty"
attr(Base_fiscalia_v15c_grant_23_24$sus_ini_mod_mvv,"label") <- "Primary Substance (initial diagnosis)"
attr(Base_fiscalia_v15c_grant_23_24$ano_nac_corr,"label") <- "Corrected birth year"
attr(Base_fiscalia_v15c_grant_23_24$con_quien_vive_joel,"label") <- "Cohabitation status (Recoded) (f)"
attr(Base_fiscalia_v15c_grant_23_24$fis_comorbidity_icd_10,"label") <- "Physical Comorbidity (ICD-10)"

vars_cov <- c("motivodeegreso_mod_imp_rec", "edad_al_ing_1", "sex", "edad_ini_cons", "escolaridad_rec", "sus_principal_mod", "freq_cons_sus_prin", "condicion_ocupacional_corr", "policonsumo", "otras_sus1_mod", "otras_sus2_mod", "otras_sus3_mod", "num_hijos_mod_joel_bin", "tenencia_de_la_vivienda_mod", "macrozona", "n_off_vio", "n_off_acq", "n_off_sud", "n_off_oth", "dg_cie_10_rec", "dg_trs_cons_sus_or", "clas_r", "porc_pobr", "sus_ini_mod_mvv", "ano_nac_corr", "con_quien_vive_joel", "fis_comorbidity_icd_10", "time_to_off_from_adm", "time_to_drop_from_adm", "age_at_censor_date", "age_tr_comp_imp", "age_offending_imp", "age_at_death","event_death")


#_#_#_#_#_#_#_#_#_#_#_#_#_
#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#_#_#_#_#_#_#_#_#_#_#_#_#_
as.data.frame.TableOne <- function(x, ...) {capture.output(print(x,
                          showAllLevels = TRUE, varLabels = T,...) -> x)
  y <- as.data.frame(x)
  y$characteristic <- dplyr::na_if(rownames(x), "")
  y <- y %>%
  fill(characteristic, .direction = "down") %>%
  select(characteristic, everything())
  rownames(y) <- NULL
  y}
#_#_#_#_#_#_#_#_#_#_#_#_#_

tbone_desc_merge5_grant_23_24<-
CreateTableOne(vars=c(setdiff(vars_cov, "policonsumo"), "offense_after_adm"), data=  Base_fiscalia_v15c_grant_23_24[,c("motivodeegreso_mod_imp_rec", "edad_al_ing_1", "sex", "edad_ini_cons", 
"escolaridad_rec", "sus_principal_mod", "freq_cons_sus_prin", 
"condicion_ocupacional_corr", "policonsumo", "otras_sus1_mod", 
"otras_sus2_mod", "otras_sus3_mod", "num_hijos_mod_joel_bin", 
"tenencia_de_la_vivienda_mod", "macrozona", "n_off_vio", "n_off_acq", 
"n_off_sud", "n_off_oth", "dg_cie_10_rec", "dg_trs_cons_sus_or", 
"clas_r", "porc_pobr", "sus_ini_mod_mvv", "ano_nac_corr", "con_quien_vive_joel", 
"fis_comorbidity_icd_10", "time_to_off_from_adm", "time_to_drop_from_adm", 
"age_at_censor_date", "age_tr_comp_imp", "age_offending_imp", "offense_after_adm","age_at_death", "event_death")], factorVars = setdiff(vars_cov, c("motivodeegreso_mod_imp_rec","edad_al_ing_1", "edad_ini_cons","ano_nac_corr", "porc_pobr", "time_to_off_from_adm", "time_to_drop_from_adm", "age_at_censor_date", "age_tr_comp_imp", "age_offending_imp", "age_at_death")), smd=T, strata="policonsumo", addOverall = T, includeNA=T, test=T)
```

::: center-table
```{r, "bring-db2-label-variables-tab",echo=T}
as.data.frame.TableOne(tbone_desc_merge5_grant_23_24, smd=T, nonnormal= T)%>% 
  dplyr::mutate(char2=characteristic) %>% 
  tidyr::fill(char2) %>% 
  dplyr::select(char2,everything()) %>% 
  dplyr::mutate(level=ifelse(is.na(level),"[Missing]",level)) %>% 
  dplyr::mutate(char2=dplyr::case_when(characteristic=="NA"~NA_character_,T~as.character(characteristic))) %>% 
  format_cells(1, 1:length(names(.)), "bold") %>%
  dplyr::select(-1) %>% 
  knitr::kable(size=10, format="markdown",caption= "Summary descriptives, Polysubstance(1) and no Polysubstance use (0)", escape=T)
#kable(size=10, format="html",caption= "Summary descriptives, by Baseline Treatment Status") %>%     kableExtra::kable_classic()
```
:::

We show the distribution of dates 

```{r, "bring-db3-add-survival-vars-dates",echo=T}
rbind(
  cbind.data.frame(cat="Date of admission to baseline treatment",
        Base_fiscalia_v15c_grant_23_24 %>% 
          dplyr::summarise(min = as.Date(min(unclass(fech_ing_num_1), na.rm=T), origin = "1970-01-01"),
           p025=as.Date(quantile(unclass(fech_ing_num_1), .025, na.rm=T), origin = "1970-01-01"),
           p25=as.Date(quantile(unclass(fech_ing_num_1), .25, na.rm=T), origin = "1970-01-01"),
           p50=as.Date(quantile(unclass(fech_ing_num_1), .5, na.rm=T), origin = "1970-01-01"),
           p75=as.Date(quantile(unclass(fech_ing_num_1), .75, na.rm=T), origin = "1970-01-01"),
           p975=as.Date(quantile(unclass(fech_ing_num_1), .975, na.rm=T), origin = "1970-01-01"),
           max = as.Date(max(unclass(fech_ing_num_1), na.rm=T), origin = "1970-01-01"))),
  cbind.data.frame(cat="Date of discharge of baseline treatment",
        Base_fiscalia_v15c_grant_23_24 %>% 
          dplyr::summarise(min = as.Date(min(unclass(fech_egres_num_1), na.rm=T), origin = "1970-01-01"),
           p025=as.Date(quantile(unclass(fech_egres_num_1), .025, na.rm=T), origin = "1970-01-01"),
           p25=as.Date(quantile(unclass(fech_egres_num_1), .25, na.rm=T), origin = "1970-01-01"),
           p50=as.Date(quantile(unclass(fech_egres_num_1), .5, na.rm=T), origin = "1970-01-01"),
           p75=as.Date(quantile(unclass(fech_egres_num_1), .75, na.rm=T), origin = "1970-01-01"),
           p975=as.Date(quantile(unclass(fech_egres_num_1), .975, na.rm=T), origin = "1970-01-01"),
           max = as.Date(max(unclass(fech_egres_num_1), na.rm=T), origin = "1970-01-01"))),
  cbind.data.frame(cat="Date of commission of offense after admission",
        Base_fiscalia_v15c_grant_23_24 %>% 
          dplyr::summarise(min = as.Date(min(unclass(fech_egres_num_1), na.rm=T), origin = "1970-01-01"),
           p025=as.Date(quantile(unclass(fech_egres_num_1), .025, na.rm=T), origin = "1970-01-01"),
           p25=as.Date(quantile(unclass(fech_egres_num_1), .25, na.rm=T), origin = "1970-01-01"),
           p50=as.Date(quantile(unclass(fech_egres_num_1), .5, na.rm=T), origin = "1970-01-01"),
           p75=as.Date(quantile(unclass(fech_egres_num_1), .75, na.rm=T), origin = "1970-01-01"),
           p975=as.Date(quantile(unclass(fech_egres_num_1), .975, na.rm=T), origin = "1970-01-01"),
           max = as.Date(max(unclass(fech_egres_num_1), na.rm=T), origin = "1970-01-01"))),
  cbind.data.frame(cat="Date of death after admission",
        Base_fiscalia_v15c_grant_23_24 %>% 
          dplyr::summarise(min = as.Date(min(unclass(date_death), na.rm=T), origin = "1970-01-01"),
           p025=as.Date(quantile(unclass(date_death), .025, na.rm=T), origin = "1970-01-01"),
           p25=as.Date(quantile(unclass(date_death), .25, na.rm=T), origin = "1970-01-01"),
           p50=as.Date(quantile(unclass(date_death), .5, na.rm=T), origin = "1970-01-01"),
           p75=as.Date(quantile(unclass(date_death), .75, na.rm=T), origin = "1970-01-01"),
           p975=as.Date(quantile(unclass(date_death), .975, na.rm=T), origin = "1970-01-01"),
           max = as.Date(max(unclass(date_death), na.rm=T), origin = "1970-01-01"))),
  cbind.data.frame(cat="Date of birth (corrected)",
        Base_fiscalia_v15c_grant_23_24 %>% 
          dplyr::summarise(min = as.Date(min(unclass(fech_nac_rec), na.rm=T), origin = "1970-01-01"),
           p025=as.Date(quantile(unclass(fech_nac_rec), .025, na.rm=T), origin = "1970-01-01"),
           p25=as.Date(quantile(unclass(fech_nac_rec), .25, na.rm=T), origin = "1970-01-01"),
           p50=as.Date(quantile(unclass(fech_nac_rec), .5, na.rm=T), origin = "1970-01-01"),
           p75=as.Date(quantile(unclass(fech_nac_rec), .75, na.rm=T), origin = "1970-01-01"),
           p975=as.Date(quantile(unclass(fech_nac_rec), .975, na.rm=T), origin = "1970-01-01"),
           max = as.Date(max(unclass(fech_nac_rec), na.rm=T), origin = "1970-01-01")))) %>% 
  knitr::kable(format="html",caption= "Summary of Dates (after correcting dates)") %>% #,col.names=c("Variables","Residential", "Ambulatory", "p-value")) %>% 
  kableExtra::kable_classic(bootstrap_options = c("striped", "hover","condensed"),font_size= 12)
```

<br>

# GLCA

::: controlly
```{r, "glca00"}
require(glca)

mydata_preds1<- 
  Base_fiscalia_v15c_grant_23_24 %>% 
  dplyr::select(sus_principal_mod,
      dg_trs_cons_sus_or,
      freq_cons_sus_prin,
      otras_sus1_mod,
      otras_sus2_mod) %>%  
  data.table::data.table()

mydata_preds2 <- mydata_preds1%>% dplyr::mutate(across(c("sus_principal_mod", "otras_sus1_mod", "otras_sus2_mod","dg_trs_cons_sus_or","freq_cons_sus_prin"), ~ dplyr::case_when(is.na(.)~ "none", T~ .)))

dplyr::group_by(mydata_preds2,sus_principal_mod, otras_sus1_mod, otras_sus2_mod) %>%  count() %>% dplyr::ungroup() %>%  arrange(desc(n)) %>% dplyr::mutate(perc= scales::percent(round(n/sum(n),2))) %>% dplyr::filter(n>0) %>% knitr::kable("markdown", caption="Combinations of substances", col.names= c("Primary substance", "Other substances (1)", "Other substances (2)","n", "%"))
```
:::

```{r, "glca01"}
first_five<-
dplyr::group_by(mydata_preds2,sus_principal_mod, otras_sus1_mod, otras_sus2_mod) %>%  count() %>% dplyr::ungroup() %>%  arrange(desc(n)) %>%  dplyr::filter(n>0, !"none"==otras_sus1_mod) %>% slice(1:5) %>% summarise(sum(n))/nrow(mydata_preds2) %>% unlist() %>% as.numeric(.)

paste0("The first four (there is one that is exchangeable) make the ", 
       as.character(scales::percent(unlist(first_five))),
       " of the sample")
```

::: controlly
```{r, "glca02"}
dplyr::group_by(mydata_preds2,sus_principal_mod, otras_sus1_mod, otras_sus2_mod, dg_trs_cons_sus_or, freq_cons_sus_prin) %>%  count() %>% dplyr::ungroup() %>%  arrange(desc(n)) %>% dplyr::mutate(perc= scales::percent(round(n/sum(n),2))) %>% dplyr::filter(n>0) %>% knitr::kable("markdown", caption="Combinations of substances", col.names= c("Primary substance", "Other substances (1)", "Other substances (2)", "ICD 10 SUD Dg", "Subs.Use.Freq.", "n", "%"))

mydata_preds3 <- mydata_preds2%>% 
dplyr::mutate(across(c("sus_principal_mod", "otras_sus1_mod", "otras_sus2_mod","dg_trs_cons_sus_or","freq_cons_sus_prin"), ~ as.numeric(factor(.))+1))%>% dplyr::mutate(across(c("sus_principal_mod", "otras_sus1_mod", "otras_sus2_mod","dg_trs_cons_sus_or","freq_cons_sus_prin"), ~ dplyr::case_when(.=="none"~ 1, T~ .)))%>%   
  data.table::data.table()
```
:::

```{r, "glca1"}
invisible("glca format")
# We excluded otras_sus3_mod because it had only one value
f_preds2<- item(sus_principal_mod, otras_sus1_mod, otras_sus2_mod, dg_trs_cons_sus_or, freq_cons_sus_prin) ~ 1

# f <- cbind(sus_principal_mod, otras_sus1_mod, otras_sus2_mod, otras_sus3_mod)~1
# gss.lc2 <- poLCA(f,mydata_preds3,nclass=2)
# lca203 <- glca(f_preds2, data = mydata_preds3, nclass = 3, seed = seed, verbose = FALSE, n.init = 5e1, decreasing=T, maxiter = 1e4,testiter = 500)

seed<-2125

testiter <- 250

old <- Sys.time()
print(old)

lca202 <- glca(f_preds2, data = mydata_preds3, nclass = 2, seed = seed, verbose = FALSE, n.init = 5e1, decreasing=T, maxiter = 1e4,testiter = testiter)
#43 minutes each more or less
lca203 <- glca(f_preds2, data = mydata_preds3, nclass = 3, seed = seed, verbose = FALSE, n.init = 5e1, decreasing=T, maxiter = 1e4,testiter = testiter)
lca204 <- glca(f_preds2, data = mydata_preds3, nclass = 4, seed = seed, verbose = FALSE, n.init = 5e1, decreasing=T, maxiter = 1e4,testiter = testiter)
lca205 <- glca(f_preds2, data = mydata_preds3, nclass = 5, seed = seed, verbose = FALSE, n.init = 5e1, decreasing=T, maxiter = 1e4,testiter = testiter)
lca206 <- glca(f_preds2, data = mydata_preds3, nclass = 6, seed = seed, verbose = FALSE, n.init = 5e1, decreasing=T, maxiter = 1e4,testiter = testiter)
lca207 <- glca(f_preds2, data = mydata_preds3, nclass = 7, seed = seed, verbose = FALSE, n.init = 5e1, decreasing=T, maxiter = 1e4,testiter = testiter)
lca208 <- glca(f_preds2, data = mydata_preds3, nclass = 8, seed = seed, verbose = FALSE, n.init = 5e1, decreasing=T, maxiter = 1e4,testiter = testiter)
lca209 <- glca(f_preds2, data = mydata_preds3, nclass = 9, seed = seed, verbose = FALSE, n.init = 5e1, decreasing=T, maxiter = 1e4,testiter = testiter)
lca210 <- glca(f_preds2, data = mydata_preds3, nclass = 10, seed = seed, verbose = FALSE, n.init = 5e1, decreasing=T, maxiter = 1e4,testiter = testiter)
lca211 <- glca(f_preds2, data = mydata_preds3, nclass = 11, seed = seed, verbose = FALSE, n.init = 5e1, decreasing=T, maxiter = 1e4,testiter = testiter)
lca212 <- glca(f_preds2, data = mydata_preds3, nclass = 12, seed = seed, verbose = FALSE, n.init = 5e1, decreasing=T, maxiter = 1e4,testiter = testiter)
lca213 <- glca(f_preds2, data = mydata_preds3, nclass = 13, seed = seed, verbose = FALSE, n.init = 5e1, decreasing=T, maxiter = 1e4,testiter = testiter)
lca214 <- glca(f_preds2, data = mydata_preds3, nclass = 14, seed = seed, verbose = FALSE, n.init = 5e1, decreasing=T, maxiter = 1e4,testiter = testiter)

gof2<-
  gofglca(lca202, lca203, lca204, lca205, lca206, lca207, lca208, lca209, lca210, lca211, lca212, lca213, lca214, test = "chisq")

new_med<-(Sys.time())
paste0("The model took ",round(new_med-old,2)," until every LCA was computed")
print(new_med)
```

```{r, "glca2"}
# https://agscl.github.io/IVE/
sabic<-c()
for( i in seq(2,14)){
  
  sabic<-c(sabic,
(-2 * get(paste0("lca2",sprintf("%02.f", i)))$gof$loglik)+ get(paste0("lca2",sprintf("%02.f", i)))$gof$df *log(  (nrow(mydata_preds3) +2)/24    )
)
}
manualcolors <- c('indianred1', 'cornflowerblue', 'gray50', 'darkolivegreen4', 'slateblue2', 
                  'firebrick4', 'goldenrod4')
levels4 <- c("logLik", "AIC", "CAIC", "BIC", "entropy", "Res.Df", "Gsq", "SABIC")
labels4 <- c('Log-Likelihood', 'Akaike Information\nCriteria(AIC)','Corrected AIC','Bayesian Information\nCriteria (BIC)', 'Entropy', 'Residual degrees of freedom', 'Deviance', "SABIC")
fig_lca_fit1<- cbind.data.frame(rn=2:14,gof2$gtable,SABIC=sabic) %>%
  data.frame() %>% 
  dplyr::mutate_if(is.character, as.numeric) %>%  # convert character columns to numeric
  tidyr::pivot_longer(cols = -rn,names_to = "indices", values_to = "value", values_drop_na = F) %>%
  dplyr::mutate(indices = factor(indices, levels = levels4, labels = labels4)) %>%
  dplyr::filter(grepl("(AIC|BIC)",indices, ignore.case=T))%>%
  dplyr::mutate(ModelIndex= factor(rn, levels=2:14)) %>% 
  ggplot(aes(x = ModelIndex, y = value, group = indices, color = indices, linetype = indices)) +
  geom_line(size = 1.5) +
  scale_color_manual(values = manualcolors) +
  #scale_linetype_manual(values = c("solid", "dashed", "dotted")) +
  labs(x = "Number of classes", y="Value", color="Measure", linetype="Measure")+
  #facet_wrap(.~indices, scales = "free_y", nrow = 4, ncol = 1) +
  theme_bw()

fig_lca_fit1
```

It does not seem viable a latent class analysis given the relative fit and the amount of different classes.

<br>

# MCA

::: controlly 
```{r mca-1, echo=T, fig.align='center', message=T, error=T, eval=T}
#https://cran.r-project.org/web/packages/factoextra/factoextra.pdf
# http://www.sthda.com/english/wiki/factoextra-r-package-easy-multivariate-data-analyses-and-elegant-visualization
require("FactoMineR")
require("factoextra")

res.mca <-
MCA(mydata_preds2[,1:(ncol(mydata_preds2)-1)], 
    ncp = 5, #number of dimensions kept in the results default=5
    graph = TRUE)


fviz_mca_var(res.mca, repel = TRUE)
```


```{r mca-15, echo=T, fig.align='center', message=T, error=T, eval=T}
cats = apply(mydata_preds2[,1:(ncol(mydata_preds2)-1)], 2, function(x) nlevels(as.factor(x)))

mca1_vars_df = data.frame(res.mca$var$coord, Variable = rep(names(cats), 
    cats))
mca1_obs_df = data.frame(res.mca$ind$coord)

# plot of variable categories
ggplot(data = mca1_vars_df, aes(x = Dim.1, y = Dim.2, label = rownames(mca1_vars_df))) + 
    geom_hline(yintercept = 0, colour = "gray70") + geom_vline(xintercept = 0, 
    colour = "gray70") + geom_text(aes(colour = Variable)) + ggtitle("MCA plot of variables using R package FactoMineR")+ geom_density2d(colour = "gray80") +
  theme_classic()

```
:::

Another analysis of heterogeneity

::: controlly 
```{r mca-2, echo=T, fig.align='center', message=T, error=T, eval=T}
require(homals)

mca5 = homals(mydata_preds2[,1:(ncol(mydata_preds2)-1)], ndim = 5, level = "nominal")

mca5$eigenvalues
```
:::

::: controlly 
```{r mca-251, echo=T, fig.align='center', message=T, error=T, eval=T , fig.cap= "Homals Dimensiones 1 y 2"}
# homogeneity analysis, aka a multiple correspondence analysis, but with many additional options.

# data frame for ggplot
D1 = unlist(lapply(mca5$catscores, function(x) x[, 1]))
D2 = unlist(lapply(mca5$catscores, function(x) x[, 2]))
mca5_vars_df = data.frame(D1 = D1, D2 = D2, Variable = rep(names(cats), 
    cats))

rownames(mca5_vars_df)<- str_replace(str_replace(str_replace(rownames(mca5_vars_df),"sus_principal_mod","s_pr"),"otras_sus","otr_"),"_mod","")

D3 = unlist(lapply(mca5$catscores, function(x) x[, 3]))
D4 = unlist(lapply(mca5$catscores, function(x) x[, 4]))
mca5_vars_df2 = data.frame(D3 = D3, D4 = D4, Variable = rep(names(cats), 
    cats))

ct<- unlist(sapply(mca5$catscores, function(x) rownames(x)))

rownames(mca5_vars_df2)<- str_replace(str_replace(str_replace(rownames(mca5_vars_df2),"sus_principal_mod","s_pr"),"otras_sus","otr_"),"_mod","")

ggplot(data = mca5_vars_df, aes(x = D1, y = D2, label = rownames(mca5_vars_df))) + 
    geom_hline(yintercept = 0, colour = "gray70") + geom_vline(xintercept = 0, 
    colour = "gray70") + ggrepel::geom_text_repel(aes(colour = Variable)) + ggtitle("MCA plot of variables using R package homals")+ theme_classic()
```
:::

::: controlly 
```{r mca-252, echo=T, fig.align='center', message=T, error=T, eval=T , fig.cap= "Homals Dimensiones 3 y 4"}
# MCA plot of variable categories

ggplot(data = mca5_vars_df2, aes(x = D3, y = D4, label = rownames(mca5_vars_df2))) + 
    geom_hline(yintercept = 0, colour = "gray70") + geom_vline(xintercept = 0, 
    colour = "gray70") + ggrepel::geom_text_repel(aes(colour = Variable)) + ggtitle("MCA plot of variables using R package homals")+ theme_classic()
```
:::

<br>

# Imputation and export


:::controlly

```{r miss, warning=FALSE, echo=T, error=T, eval=T}
require(missRanger)

Base_fiscalia_v15c_grant_23_24_miss <-
Base_fiscalia_v15c_grant_23_24 #%>% 
if(exists("no_mostrar")){
  set.seed(2125)
  Base_fiscalia_v15c_grant_23_24 %>% 
    dplyr::arrange(hash_key, edad_al_ing_1) %>% 
    dplyr::select() %>% 
     missRanger::missRanger(
                  formula = .  -offender_d - age_tr_comp_imp ~ . - hash_key -offender_d - age_tr_comp_imp,
                  num.trees = 200, 
                  pmm.k = 3,                
                  returnOOB=T,
                  maxiter= 50,
                  verbose = 2, 
                  seed = 2125)
  #should drop:
    # event_offense age_dropout_imp event_comp age_at_censor_date time_to_off_from_adm time_to_drop_from_adm edad_comision_imp fec_comision_simple_2 relacion_vifsaf_2
  values_pris<- c(0.0013, 0.0053, 0.0000, 0.0000, 0.0000, 0.0158, 0.0000, 0.0000, 0.0000, 0.0000, 6e-04, 0.0024, 0.0024, 5e-04, 0.0285)
  paste0("Mdn= ",median(values_pris)," Q1= ",quantile(values_pris,.25),", Q3= ", quantile(values_pris, .75))
}
```
:::

# Export

```{r export, warning=FALSE, echo=T, error=T, eval=T}
#2023-01-01 we had a problem with edad_al_ing_fmt. This variable predict better (it had lower amount of missing data and was in wide format)

#cont_vars_desc[1]<-ifelse(cont_vars_desc[1]=="edad_al_ing_fmt","edad_al_ing_1",cont_vars_desc[1])


Base_fiscalia_v15c_grant_23_24 %>% 
  dplyr::arrange(hash_key, fech_ing_num_1)  %>% 
  data.table::data.table() %>% 
  rio::export(file = paste0("an_grant_23_24.dta"))

#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
# IMPUTATION
#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:
#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:

Base_fiscalia_v15c_grant_23_24_miss %>% 
  dplyr::arrange(hash_key, fech_ing_num_1)  %>% 
  data.table::data.table() %>% 
  rio::export(file = paste0("an_grant_23_24_miss.dta"))
```

<br>

# Survival Mediation

```{r, eval=F}

#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#Our simulation-based approach to the estimation of mediation effects enables users to deal with missing data via standard multiple imputation procedures in a straightforward fashion. The mediation package includes a pair of utility functions – mediations and amelidiate– to facilitate such analysis. First, users simulate multiple data sets using their preferredimputation software. Next, run mediate on each data set by simply passing the data setsthrough mediations. Next, pass the output of mediations to the amelidiate function, which combines the components of the output from mediations into a format that can be analyzed with the standard summary and plot commands.5 Alternatively, users can manually run mediate on their imputed data sets and simply stack the vectors of quantities they are interested in, and use basic functions like quantile to calculate confidence intervals.
#, sims = 100        Simulations: 100
require("MatchIt")


variables_vector <- c("sex", "edad_ini_cons", "escolaridad_rec", "condicion_ocupacional_corr", "num_hijos_mod_joel_bin", "tenencia_de_la_vivienda_mod", "macrozona", "n_off_vio", "n_off_acq", "n_off_sud", "n_off_oth", "dg_cie_10_rec", "dg_trs_cons_sus_or", "clas_r", "porc_pobr", "sus_ini_mod_mvv", "ano_nac_corr", "con_quien_vive_joel", "fis_comorbidity_icd_10", "n_off_vict")

#get a matched cohort of people by polysubstance use
m.out3 <- matchit(policonsumo ~ rcs(edad_al_ing_1, 4) + sex + edad_ini_cons + escolaridad_rec + condicion_ocupacional_corr + num_hijos_mod_joel_bin + tenencia_de_la_vivienda_mod + macrozona + n_off_vio + n_off_acq + n_off_sud + n_off_oth + dg_cie_10_rec + dg_trs_cons_sus_or + clas_r + porc_pobr + sus_ini_mod_mvv + ano_nac_corr + con_quien_vive_joel + fis_comorbidity_icd_10+ n_off_vict, 
                  data = Base_fiscalia_v15c_grant_23_24[complete.cases(Base_fiscalia_v15c_grant_23_24[,..variables_vector]),], 
                  method = "nearest", 
                  discard = "both",
                  caliper = .05, 
                  standardize = T)

plot(
cobalt::bal.tab(m.out3, un = TRUE, m.threshold = .1, 
        v.threshold = 2))
#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#install.packages("MatchThem")
# require(MatchThem)
# imputed.datasets <- mice::mice(dplyr::select(Base_fiscalia_v15c_grant_23_24,c(variables_vector,"edad_al_ing_1","policonsumo","time_to_off_from_adm","time_to_drop_from_adm","event_death","event_comp","event_offense")), m = 5)
# 
# #Currently, "within" (performing matching within each dataset) and "across" (estimating propensity scores within each dataset, averaging them across datasets, and performing matching using the averaged propensity scores in each dataset) approaches are available. The default is "within", which has been shown to have superior performance in most cases
#   #Matching the multiply imputed datasets
# matched.datasets <- matchthem(policonsumo ~  sex + edad_ini_cons + escolaridad_rec + condicion_ocupacional_corr + num_hijos_mod_joel_bin + tenencia_de_la_vivienda_mod + macrozona + n_off_vio + n_off_acq + n_off_sud + n_off_oth + dg_cie_10_rec + dg_trs_cons_sus_or + clas_r + porc_pobr + sus_ini_mod_mvv + ano_nac_corr + con_quien_vive_joel + fis_comorbidity_icd_10+ n_off_vict, 
# imputed.datasets, approach = 'within', method = 'nearest')
#Matching Observations  | dataset: #1Error: Missing values are not allowed in the covariates.
                                                     
#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_

mod.y <- survreg(Surv(time_to_off_from_adm, event_offense) ~ event_comp + policonsumo, data = match.data(m.out3))

mod.m <- glm(event_comp ~ policonsumo, data = match.data(m.out3), family="binomial")

med.m <- mediation::mediate(mod.m, mod.y, treat = "policonsumo", mediator = "event_comp",robust = TRUE, sims = 100 )#cluster="" no funciona

summary(med.m)


sensitivityAnalysis <- mediation::medsens(med.m)
#Error in mediation::medsens(med.m) :    mediate object fitted with non-supported model combinations


#3.2. Moderated mediation


#passing the object from mediate to the medsens function
#If there exist unobserved pre-treatment confounders which affect both the mediator and the outcome, we expect that the sequential ignorability assumption is violated and ρ is no longer zero.
#sens.out <- medsens(med.out, rho.by = 0.1, effect.type = "indirect", sims = 100)

#where rho.by = 0.1 specifies that ρ will vary from −0.9 to 0.9 by 0.1 increments, andeffect.type = "indirect" means that sensitivity analysis is conducted for the ACME. Alternatively, specifying effect.type = "direct" performs sensitivity analysis for the ADE and "both" returns sensitivity analysis for the ACME and ADE.
#:_#:#:#:#:#:#:
#Single experiment design
#First, the researchers can continue to make the sequential ignorability assumption and nonparametrically estimate the ACME. This approach works only when the mediator variable is discrete.
#:_#:#:#:#:#:#:

#Under the parallel design, the ACME is not point identified without an additional assumption
#The mediation package offers two options via the mediate.pd function.

#Parallel encouragement design
#In many situations, perfect manipulation of the mediating variable may be difficult. In the parallel encouragement design, subjects are split into two separate experiments
#[CREO QUE ESTE ES EL MAS CORRECTO]
#  subjects are randomly assigned to the treatment and control conditions and then, within each condition, a subset of subjects are randomly encouraged to have a high or low value of the mediator. Both the mediator and outcome variable are then measured

#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
require(mets)

#Thomas H. Scheike and Klaus K. Holst and Jacob B. Hjelmborg (2013). Estimating heritability for cause specific mortality based on twin studies. Lifetime Data Analysis. http://dx.doi.org/10.1007/s10985-013-9244-x

#Klaus K. Holst and Thomas H. Scheike Jacob B. Hjelmborg (2015). The Liability Threshold Model for Censored Twin Data. Computational Statistics and Data Analysis. http://dx.doi.org/10.1016/j.csda.2015.01.014


# comp_cases_Base_fiscalia_v15c_grant_23_24<-
# Base_fiscalia_v15c_grant_23_24[complete.cases(Base_fiscalia_v15c_grant_23_24[,..variables_vector]),] %>% dplyr::mutate(policonsumo=factor(policonsumo), event_comp=factor(event_comp))
# 
# weightmodel <- fit <- glm(event_comp ~ policonsumo, 
#                   data = comp_cases_Base_fiscalia_v15c_grant_23_24, family=binomial)
# 
# wdata <- medweight(fit,data= comp_cases_Base_fiscalia_v15c_grant_23_24)
# 
# aaMss2 <- binreg(Event(time,status)~gp+dnr+preauto+ttt24+cluster(id),data=dat,time=50,cause=2)
# summary(aaMss2)
# aaMss22 <- binreg(Event(time,status)~dnr+preauto+ttt24+cluster(id),data=dat,time=50,cause=2)
# summary(aaMss22)
# #Error in `[.data.frame`(x, i, j) : undefined columns selected

#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_


#VanderWeele TJ. Causal mediation analysis with survival data. Epidemiology. 2011 Jul;22(4):582-5. doi: 10.1097/EDE.0b013e31821db37e. PMID: 21642779; PMC

#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#h 
# This paper presented methods for mediation analysis with a time-to-event outcome that are based on either the AFT model or the Cox PH model. The choice for an effect measure, that is, the hazard ratio from a Cox PH model or the ratio of mean survival times from an AFT model, should primarily depend on the scientific context of the mediation analysis. In other words, the effect measure should match the research question at hand. When using either the Cox or AFT models with any of the two mediation frameworks, it is necessary to check the corresponding assumptions. The PH assumption can be checked using the Schoenfeld residuals test and visual inspection of the graphs based on the scaled Schoenfeld residuals. The Weibull assumption can be checked using either of the following two methods: (1) comparing the AIC from AFT models with different specified error distributions and select the error distribution with the lowest AIC, and (2) visual inspection of the Cox–Snell residuals. A further explanation on how to check the Cox and AFT model assumptions can be found in Kleinbaum and Klein 

#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#https://cran.r-project.org/web/packages/mma/mma.pdf
#Yu, Q. and Li, B., 2017. mma: An R Package for Mediation Analysis with Multiple Mediators.  Journal of Open Research Software,  5(1), p.11.DOI: https://doi.org/10.5334/jors.160

##Surv class outcome (survival analysis)
data(cgd1) #a dataset in the survival package
x=cgd1[,c(4:5,7:12)]
pred=cgd1[,6]
status<-ifelse(is.na(cgd1$etime1),0,1)
y=Surv(cgd1$futime,status)
#for continuous predictor
data.surv.contx<-data.org(x,y,pred=pred,mediator=1:ncol(x),
alpha=0.5,alpha2=0.5)
temp9.contx<-boot.med(data=data.surv.contx,n=1,n2=2, type="lp")
temp10.contx<-boot.med(data=data.surv.contx,nonlinear=TRUE,n=1,n2=2)

#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#https://cran.uib.no/web/packages/mets/vignettes/mediation-survival.html
# The mediator can
## binomial using glm-binomial.
## multnomial via the mlogit function
# In the below example these are
## mediator: gp.f
## exposure : dnr.f
weightmodel <- fit <- glm(gp.f~dnr.f+preauto+ttt24,data=dat,family=binomial)
wdata <- medweight(fit,data=dat)


aaMss <- binreg(Event(time,status)~dnr.f0+dnr.f1+preauto+ttt24+cluster(id),data=wdata,time=50,weights=wdata$weights,cause=2)
summary(aaMss)
ll <- mediatorSurv(aaMss,fit,data=dat,wdata=wdata)
summary(ll)

aaMss <- phreg(Surv(time,status==2)~dnr.f0+dnr.f1+preauto+ttt24+cluster(id),data=wdata,weights=wdata$weights)
summary(aaMss)

#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
# https://cran.r-project.org/web/packages/HIMA/HIMA.pdf
# Zhang H, Zheng Y, Hou L, Zheng C, Liu L. Mediation analysis for survival data with high-dimensional mediators. Bioinformatics. 2021 Nov 5;37(21):3815-3821. doi: 10.1093/bioinformatics/btab564. PMID: 34343267; PMCID: PMC8570823.


#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_
# https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3204669/
```

<br>

# Session info

```{r session-info, echo=T, error=T, message=TRUE, paged.print=TRUE}
message(paste0("R library: ", Sys.getenv("R_LIBS_USER")))
message(paste0("Date: ",Sys.Date()))
message(paste0("Editor: ", path))

sesion_info <- devtools::session_info()
dplyr::select(
  tibble::as_tibble(sesion_info$packages),
  c(package, loadedversion, source)
) %>% 
  DT::datatable(filter = 'top', colnames = c('Row number' =1,'Package' = 2, 'Version'= 3),
              caption = htmltools::tags$caption(
        style = 'caption-side: top; text-align: left;',
        '', htmltools::em('R packages')),
      options=list(
initComplete = htmlwidgets::JS(
        "function(settings, json) {",
        "$(this.api().tables().body()).css({
            'font-family': 'Helvetica Neue',
            'font-size': '50%', 
            'code-inline-font-size': '15%', 
            'white-space': 'nowrap',
            'line-height': '0.75em',
            'min-height': '0.5em'
            });",#;
        "}")))


 py_list_packages()%>% 
  DT::datatable(filter = 'top', colnames = c('Row number' =1,'Package' = 2, 'Version'= 3),
              caption = htmltools::tags$caption(
        style = 'caption-side: top; text-align: left;',
        '', htmltools::em('Python packages')),
      options=list(
initComplete = htmlwidgets::JS(
        "function(settings, json) {",
        "$(this.api().tables().body()).css({
            'font-family': 'Helvetica Neue',
            'font-size': '50%', 
            'code-inline-font-size': '15%', 
            'white-space': 'nowrap',
            'line-height': '0.75em',
            'min-height': '0.5em'
            });",#;
        "}")))
```

Guardar avances

```{r}
save.image("an_grant_23_24.RData")
```
